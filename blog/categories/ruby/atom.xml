<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Notes for Ruby]]></title>
  <link href="http://ruby.code.kekou.de//blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://ruby.code.kekou.de//"/>
  <updated>2014-04-03T16:00:12+08:00</updated>
  <id>http://ruby.code.kekou.de//</id>
  <author>
    <name><![CDATA[Delbert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ex 23: 阅读一些代码]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex23/"/>
    <updated>2014-04-03T15:54:39+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex23</id>
    <content type="html"><![CDATA[<p>Delbert 会在本文中提供几个链接。</p>

<!--more-->


<ol>
<li><a href="//github.com%20GitHub">github.com</a></li>
<li><a href="//gitcafe.com" title="大陆的 GitHub">gitcafe.com</a></li>
<li><a href="//oschina.net%20Open%20Source%20China">oschina.net</a></li>
<li><a href="//ruby-china.org%20Ruby%20China">ruby-china.org</a></li>
<li><a href="//www.google.com/ncr">Google.com</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 22: 目前为止你学到了什么]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex22/"/>
    <updated>2014-04-03T15:47:38+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex22</id>
    <content type="html"><![CDATA[<p>本节没有代码。点开原文也没有，加上这个只是为了看起来整齐。</p>

<!--more-->


<p>有还是没有？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 21: 函数可以返回一些东西]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex21/"/>
    <updated>2014-04-03T15:47:13+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex21</id>
    <content type="html"><![CDATA[<p>就是函数的返回值啦。不过本节还没有用到 <code>return</code> 关键字， Ruby 默认把函数最后一行作为返回值。</p>

<!--more-->


<p>``` ruby ex21.rb //ruby.code.kekou.de/code/ex21.rb Download Code
def add(a, b)
  puts &ldquo;ADDING #{a} + #{b}&rdquo;
  a + b
end</p>

<p>def subtract(a, b)
  puts &ldquo;SUBTRACTING #{a} &ndash; #{b}&rdquo;
  a &ndash; b
end</p>

<p>def multiply(a, b)
  puts &ldquo;MULTIPLYING #{a} * #{b}&rdquo;
  a * b
end</p>

<p>def divide(a, b)
  puts &ldquo;DIVIDING #{a} / #{b}&rdquo;
  a / b
end</p>

<p>puts &ldquo;Let&rsquo;s do some math with just functions!&rdquo;</p>

<p>age = add(30, 5)
height = subtract(78,4)
weight = multiply(90, 2)
iq = divide(100, 2)</p>

<p>puts &ldquo;Age: #{age}, Height: #{height}, Weight: #{weight}, IQ: #{iq}&rdquo;</p>

<h1>A puzzle for the extra credit, type it in anyway.</h1>

<p>puts &ldquo;Here is a puzzle.&rdquo;</p>

<p>what = add(age, subtract(height, multiply(weight, divide(iq, 2))))</p>

<p>puts &ldquo;That becomes: #{what} Can you do it by hand?&rdquo;
```</p>

<p>输出为</p>

<pre><code>Let's do some math with just functions!
ADDING 30 + 5
SUBTRACTING 78 - 4
MULTIPLYING 90 * 2
DIVIDING 100 / 2
Age: 35, Height: 74, Weight: 180, IQ: 50
Here is a puzzle.
DIVIDING 50 / 2
MULTIPLYING 180 * 25
SUBTRACTING 74 - 4500
ADDING 35 + -4426
That becomes: -4391 Can you do it by hand?
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 20: 函数和文件]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex20/"/>
    <updated>2014-04-03T14:54:15+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex20</id>
    <content type="html"><![CDATA[<p>这一节是写了用来操作文件的函数，包括输出指定行，从头输出等方法。</p>

<!--more-->


<p>``` ruby ex20.rb //ruby.code.kekou.de/code/ex20.rb Download Code
input_file = ARGV[0]</p>

<p>def print_all(f)
  puts f.read()
end</p>

<p>def rewind(f)
  f.seek(0, IO::SEEK_SET)
end</p>

<p>def print_a_line(line_count, f)
  puts &ldquo;#{line_count} #{f.readline()}&rdquo;
end</p>

<p>current_file = File.open(input_file)</p>

<p>puts &ldquo;First let&rsquo;s print the whole file:&rdquo;
puts # a blank line</p>

<p>print_all(current_file)</p>

<p>puts &ldquo;Now let&rsquo;s rewind, kind of like a tape.&rdquo;</p>

<p>rewind(current_file)</p>

<p>puts &ldquo;Let&rsquo;s print three lines:&rdquo;</p>

<p>current_line = 1
print_a_line(current_line, current_file)</p>

<p>current_line = current_line + 1
print_a_line(current_line, current_file)</p>

<p>current_line = current_line + 1
print_a_line(current_line, current_file)
```</p>

<p>执行后输出：</p>

<pre><code>$ruby ex20.rb ex16_sample.txt
First let's print the whole file:

Line One.
Line Two.
Line Three.
Now let's rewind, kind of like a tape.
Let's print three lines:
1 Line One.
2 Line Two.
3 Line Three.
</code></pre>

<p>注释直接写在<a href="//ruby.code.kekou.de/code/ex20.rb" title="源码">源码</a>里面了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 18: 命名、变量、代码、函数]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex18/"/>
    <updated>2014-04-03T12:00:04+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex18</id>
    <content type="html"><![CDATA[<p>这一节要接触函数了，用 <code>def</code> 关键字和 Python 真是像呢。话说，真的是松本看不惯 Python 才写的 Ruby 么？</p>

<!--more-->


<p>``` ruby ex18.rb //ruby.code.kekou.de/code/ex18.rb Download Code</p>

<h1>this one is like your scripts with argv</h1>

<p>def puts_two(*args)
  arg1, arg2 = args
  puts &ldquo;arg1: #{arg1}, arg2: #{arg2}&rdquo;
end</p>

<h1>ok, that *args is actually pointless, we can just do this</h1>

<p>def puts_two_again(arg1, arg2)
  puts &ldquo;arg1: #{arg1}, arg2: #{arg2}&rdquo;
end</p>

<h1>this just takes one argument</h1>

<p>def puts_one(arg1)
  puts &ldquo;arg1: #{arg1}&rdquo;
end</p>

<h1>this one takes no arguments</h1>

<p>def puts_none()
  puts &ldquo;I got nothin'.&rdquo;
end</p>

<p>puts_two(&ldquo;Zed&rdquo;,&ldquo;Shaw&rdquo;)
puts_two_again(&ldquo;Zed&rdquo;,&ldquo;Shaw&rdquo;)
puts_one(&ldquo;First!&rdquo;)
puts_none()
```</p>

<p>定义了四个函数，第一个是用指针方式指定了参数个数，剩余三个则是指定了有限个参数个数。最后调用执行这四个函数。</p>

<ol>
<li>函数定义是以 <code>def</code> 开始的；</li>
<li>Ruby 的规范是以小写字符和 <code>_</code> 下划线来进行连接；</li>
<li>函数名后紧接左括号；</li>
<li>多个参数时应用英文逗号隔开；</li>
<li>参数结束后要用英文右括号结束；</li>
<li>函数体要进行缩进两个空格(Delbert 自己更习惯用一个 Tab)；</li>
<li>与相应的 <code>def</code> 对齐的地方要有 <code>end</code> 来完成函数。</li>
</ol>

]]></content>
  </entry>
  
</feed>
