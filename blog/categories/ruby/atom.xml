<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Notes for Ruby]]></title>
  <link href="http://ruby.code.kekou.de//blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://ruby.code.kekou.de//"/>
  <updated>2014-04-02T13:42:03+08:00</updated>
  <id>http://ruby.code.kekou.de//</id>
  <author>
    <name><![CDATA[Delbert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ex 10: 那是什么？]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/02/ex10/"/>
    <updated>2014-04-02T13:31:22+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/02/ex10</id>
    <content type="html"><![CDATA[<p>表示不明白标题想说什么意思，不过，上一节的疑问有了答案。</p>

<!--more-->


<p>上一节主要是引入了转义字符，再就是反斜线可以将一些有特殊含义的字符还原本来的意思。繁体版本用了“<strong>跳脱</strong>”这个字眼，我觉得用“<strong>还原</strong>”可能更好一点。</p>

<p><code>ruby
&lt;&lt;&lt;TAG_NAME
......
code
.....
TAG_NAME
</code></p>

<p>上面这种是<strong>文件语法</strong>(Document Syntax)，放在 <code>TAG_NAME</code> 中间的可以是任意多行的文本，相当于一个文件，也可以将其赋值给一个变量。</p>

<p>``` ruby rb10 //ruby.code.kekou.de/code/rb10.rb Download Code
tabby_cat = &ldquo;\tI&rsquo;m tabbed in.&rdquo;
persian_cat = &ldquo;I&rsquo;m split\non a line.&rdquo;
backslash_cat = &ldquo;I&rsquo;m \ a \ cat.&rdquo;</p>

<p>fat_cat = &lt;&lt;MY_HEREDOC
I&rsquo;ll do a list:
\t<em> Cat food
\t</em> Fishies
\t<em> Catnip\n\t</em> Grass
MY_HEREDOC</p>

<p>puts tabby_cat
puts persian_cat
puts backslash_cat
puts fat_cat
```</p>

<p>输出为</p>

<p>```</p>

<pre><code>I'm tabbed in.
</code></pre>

<p>I&rsquo;m split
on a line.
I&rsquo;m \ a \ cat.
I&rsquo;ll do a list:</p>

<pre><code>* Cat food
* Fishies
* Catnip
* Grass
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 9: 输出，输出，输出]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/02/ex09/"/>
    <updated>2014-04-02T13:09:26+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/02/ex09</id>
    <content type="html"><![CDATA[<p>开始用到转义字符了。</p>

<!--more-->


<p>``` ruby ex9.rb //ruby.code.kekou.de/code/ex9.rb Download Code</p>

<h1>Here&rsquo;s some new strange stuff, remember type it exactly.</h1>

<p>days = &ldquo;Mon Tue Wed Thu Fri Sat Sun&rdquo;
months = &ldquo;Jan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug&rdquo; #转义字符</p>

<p>puts &ldquo;Here are the days: &rdquo;, days
puts &ldquo;Here are the months: &rdquo;, months</p>

<p>puts &lt;&lt;PARAGRAPH    #这是什么？
There&rsquo;s something going on here.
With the three double-quotes.
We&rsquo;ll be able to type as much as we like.
Even 4 lines if we want, or 5, or 6.
PARAGRAPH
```</p>

<p>会输出</p>

<p><code>
Here are the days:
Mon Tue Wed Thu Fri Sat Sun
Here are the months:
Jan
Feb
Mar
Apr
May
Jun
Jul
Aug
There's something going on here.
With the three double-quotes.
We'll be able to type as much as we like.
Even 4 lines if we want, or 5, or 6.
</code></p>

<p><code>\t</code> <code>\n</code> 什么的 Cpp 里面也是经常用的，但是那个 <code>PARAGRAPH</code> 是什么？是标签还是什么？输出的时候没有输出啊</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 8: 输出，输出]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/02/ex08/"/>
    <updated>2014-04-02T12:49:43+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/02/ex08</id>
    <content type="html"><![CDATA[<p>另外一种格式化输出，同时可以用格式输出输出格式。Ruby 的输出貌似挺灵活的样子。</p>

<!--more-->


<p>``` ruby ex8.rb //ruby.code.kekou.de/code/ex8.rb Download Code
formatter = &ldquo;%s %s %s %s&rdquo;</p>

<p>puts formatter % [1, 2, 3, 4]
puts formatter % [&ldquo;one&rdquo;, &ldquo;two&rdquo;, &ldquo;three&rdquo;, &ldquo;four&rdquo;]
puts formatter % [true, false, false, true]
puts formatter % [formatter, formatter, formatter, formatter]#直接输出格式
puts formatter % [</p>

<pre><code>"I had this thing.",
"That you could type up right.",
"But it didn't sing.",
"So I said goodnight."
</code></pre>

<p>]
```</p>

<p>输出为</p>

<p><code>bash
1 2 3 4
one two three four
true false false true
%s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s
I had this thing. That you could type up right. But it didn't sing. So I said goodnight.
</code></p>

<p><code>%</code> 后面用的是中括号 <code>[]</code>，格式化输出的说明见下面：</p>

<p><code>
%a  浮点数、十六进制数字和p-记数法（C99）
%A  浮点数、十六进制数字和p-记法（C99）
%c  一个字符　
%d  有符号十进制整数　
%e  浮点数、e-记数法
%E  浮点数、E-记数法
%f  浮点数、十进制记数法　　
%g  根据数值不同自动选择%f或%e．
%G  根据数值不同自动选择%f或%e.
%i  有符号十进制数（与%d相同）
%o  无符号八进制整数
%p  指针　　　　
%s  字符串
%u  无符号十进制整数
%x  使用十六进制数字０f的无符号十六进制整数　
%X  使用十六进制数字０f的无符号十六进制整数
%%  打印一个百分号
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 7: 更多输出]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/01/ex07/"/>
    <updated>2014-04-01T20:51:50+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/01/ex07</id>
    <content type="html"><![CDATA[<p>格式化输出并不要求后面一定是变量，输出的同时可以进行类似数学计算的奇怪东东。</p>

<!--more-->


<p>``` ruby ex7.rb //ruby.code.kekou.de/code/ex7.rb Download Code
puts &ldquo;Normal sentences.&rdquo;
puts &ldquo;This is %s.&rdquo;%&ldquo;a word&rdquo;
puts &ldquo;And next one will output #{10} dots.&rdquo;
puts &ldquo;.&rdquo;*10</p>

<p>word1 = &ldquo;W&rdquo;
word2 = &ldquo;o&rdquo;
word3 = &ldquo;r&rdquo;
word4 = &ldquo;d&rdquo;</p>

<p>print word1+word2+word3+word4   #No Return
puts &ldquo;And&rdquo;
puts word1+word2+word3+word4    #Switch to the next line.</p>

<p>print &ldquo;Now you see the DIFFERENCE.&rdquo;
```</p>

<p>从输出来看，可以明显看到区别：</p>

<p><code>bash
Normal sentences.
This is a word.
And next one will output 10 dots.
..........
WordAnd
Word
Now you see the DIFFERENCE.&lt;&lt;&lt; Process finished. (Exit code 0)
</code></p>

<p>其中 <code>&lt;&lt;&lt; Process finished. (Exit code 0)</code> 是结束后没有换行，命令行的内容自动加到了后面。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 6: 字符串]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/01/ex06/"/>
    <updated>2014-04-01T17:12:41+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/01/ex06</id>
    <content type="html"><![CDATA[<p>前面用 <code>puts</code> 输出的用双引号引起来的就是字符串。</p>

<!--more-->


<p>``` ruby ex6.rb //ruby.code.kekou.de/code/ex6.rb Download code
x = &ldquo;There are #{10} types of people.&rdquo;  # 10 本身是数字
binary = &ldquo;binary&rdquo;
do_not = &ldquo;don&rsquo;t&rdquo;
y = &ldquo;Those who know #{binary} and those who #{do_not}.&rdquo;# 引用另外两个变量</p>

<p>puts x
puts y</p>

<p>puts &ldquo;I said: #{x}.&rdquo;
puts &ldquo;I also said: &lsquo;#{y}&rsquo;.&rdquo; # 继续引用 x 和 y</p>

<p>hilarious = false
joke_evaluation = &ldquo;Isn&rsquo;t that joke so funny?! #{hilarious}&rdquo; # 布尔值的变量</p>

<p>puts joke_evaluation</p>

<p>w = &ldquo;This is the left side of&hellip;&rdquo;
e = &ldquo;a string with a right side.&rdquo;</p>

<p>puts w + e # + 连接字符串
```</p>

<p>上面的代码中加上了部分注释， bash 中输出如下</p>

<p><code>bash
There are 10 types of people.
Those who know binary and those who don't.
I said: There are 10 types of people..
I also said: 'Those who know binary and those who don't.'.
Isn't that joke so funny?! false
This is the left side of...a string with a right side.
</code></p>
]]></content>
  </entry>
  
</feed>
