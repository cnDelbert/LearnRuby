<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Notes for Ruby]]></title>
  <link href="http://ruby.code.kekou.de//blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://ruby.code.kekou.de//"/>
  <updated>2014-04-07T11:05:48+08:00</updated>
  <id>http://ruby.code.kekou.de//</id>
  <author>
    <name><![CDATA[Delbert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ex 46: 建立一个项目框架]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex46/"/>
    <updated>2014-04-06T22:24:42+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex46</id>
    <content type="html"><![CDATA[<p>很明显，这一节中所有的内容都是在 *nix 系统下完成的。不过， Windows 系统的 PowerShell 命令应该也可以胜任。不行的话还是架设虚拟机吧。</p>

<!--more-->


<p>TBD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 45: 对象、类和继承关系]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex45/"/>
    <updated>2014-04-06T21:46:18+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex45</id>
    <content type="html"><![CDATA[<p>本节讲到了类与对象， is-a 和 has-a 的关系。</p>

<!--more-->


<p>is-a 是这样的：狗<strong>是一种</strong>动物。</p>

<p>has-a 是这样的： 狗<strong>有一个</strong>名字。</p>

<p>所以，类与类的关系是 is-a，类与其中的成员的关系是 has-a。</p>

<p><code>text
Line 6: is-a
Line 10: has-a
Line 16: is-a
Line 20: has-a
Line 26: is-a
Line 32: has-a
Line 40: is-a
Line 44: has-a
Line 46: has-a
Line 52: is-a
Line 57: is-a
Line 62: is-a
Line 70: is-a
Line 73: is-a
Line 76: has-a
Line 79: is-a
Line 82: has-a
Line 85: is-a
Line 88: is-a
Line 91: is-a
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 44: 评估你的游戏]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex44/"/>
    <updated>2014-04-06T21:41:21+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex44</id>
    <content type="html"><![CDATA[<p>评估你的游戏只是本节最后一部分内容，前面说了编程风格和养成良好变成习惯的问题。</p>

<!--more-->


<p>虽然不想写注释，但是如果不写注释的话，真的是会很快忘记你这段代码的作用的，除非是 <code>1+1=2</code> 这种的。</p>

<p>我看 Bullet 的代码，注释真是不多，最起码对我而言是不多，最开始的时候我都不知道应该如何下手。后来还是用 Doxygen 生成了 manual ，虽然还是有很多问题，但还是聊胜于无吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 43: 你来制作一个游戏]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex43/"/>
    <updated>2014-04-06T21:39:20+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex43</id>
    <content type="html"><![CDATA[<p>略。</p>

<!--more-->


<p>我有拖延症，待会儿再说。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 42: 物以类聚]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex42/"/>
    <updated>2014-04-06T21:20:04+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex42</id>
    <content type="html"><![CDATA[<p>本节提到了类的概念，代码太长，懒得粘贴了。</p>

<!--more-->


<p>Ruby 的实例变量是以 <code>@</code> 开头，只对单个对象可见。不管在类的什么地方定义，用的都是同一个。初始化对象函数 <code>initialize</code> 函数可以类比成 C++ 里面的构造函数。</p>

<p>通过 <code>attr_*</code> 来设置实例变量能否被外界读取写入。</p>

<p>类以 <code>Class 类名</code> 开头，对应 <code>end</code> 结束，类的继承用 <code>&lt;</code> 符号。</p>
]]></content>
  </entry>
  
</feed>
