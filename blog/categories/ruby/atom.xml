<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Notes for Ruby]]></title>
  <link href="http://ruby.code.kekou.de//blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://ruby.code.kekou.de//"/>
  <updated>2014-04-01T21:04:49+08:00</updated>
  <id>http://ruby.code.kekou.de//</id>
  <author>
    <name><![CDATA[Delbert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ex 7: 更多输出]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/01/ex07/"/>
    <updated>2014-04-01T20:51:50+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/01/ex07</id>
    <content type="html"><![CDATA[<p>格式化输出并不要求后面一定是变量，输出的同时可以进行类似数学计算的奇怪东东。</p>

<!--more-->


<p>``` ruby ex07.rb //ruby.code.kekou.de/code/ex07.rb Download Code
puts &ldquo;Normal sentences.&rdquo;
puts &ldquo;This is %s.&rdquo;%&ldquo;a word&rdquo;
puts &ldquo;And next one will output #{10} dots.&rdquo;
puts &ldquo;.&rdquo;*10</p>

<p>word1 = &ldquo;W&rdquo;
word2 = &ldquo;o&rdquo;
word3 = &ldquo;r&rdquo;
word4 = &ldquo;d&rdquo;</p>

<p>print word1+word2+word3+word4   #No Return
puts &ldquo;And&rdquo;
puts word1+word2+word3+word4    #Switch to the next line.</p>

<p>print &ldquo;Now you see the DIFFERENCE.&rdquo;
```</p>

<p>从输出来看，可以明显看到区别：</p>

<p><code>bash
Normal sentences.
This is a word.
And next one will output 10 dots.
..........
WordAnd
Word
Now you see the DIFFERENCE.&lt;&lt;&lt; Process finished. (Exit code 0)
</code></p>

<p>其中 <code>&lt;&lt;&lt; Process finished. (Exit code 0)</code> 是结束后没有换行，命令行的内容自动加到了后面。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 6: 字符串]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/01/ex06/"/>
    <updated>2014-04-01T17:12:41+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/01/ex06</id>
    <content type="html"><![CDATA[<p>前面用 <code>puts</code> 输出的用双引号引起来的就是字符串。</p>

<!--more-->


<p>``` ruby ex6.rb //ruby.code.kekou.de/code/ex6.rb Download code
x = &ldquo;There are #{10} types of people.&rdquo;  # 10 本身是数字
binary = &ldquo;binary&rdquo;
do_not = &ldquo;don&rsquo;t&rdquo;
y = &ldquo;Those who know #{binary} and those who #{do_not}.&rdquo;# 引用另外两个变量</p>

<p>puts x
puts y</p>

<p>puts &ldquo;I said: #{x}.&rdquo;
puts &ldquo;I also said: &lsquo;#{y}&rsquo;.&rdquo; # 继续引用 x 和 y</p>

<p>hilarious = false
joke_evaluation = &ldquo;Isn&rsquo;t that joke so funny?! #{hilarious}&rdquo; # 布尔值的变量</p>

<p>puts joke_evaluation</p>

<p>w = &ldquo;This is the left side of&hellip;&rdquo;
e = &ldquo;a string with a right side.&rdquo;</p>

<p>puts w + e # + 连接字符串
```</p>

<p>上面的代码中加上了部分注释， bash 中输出如下</p>

<p><code>bash
There are 10 types of people.
Those who know binary and those who don't.
I said: There are 10 types of people..
I also said: 'Those who know binary and those who don't.'.
Isn't that joke so funny?! false
This is the left side of...a string with a right side.
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 4: 变量和命名]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/01/ex04/"/>
    <updated>2014-04-01T14:13:58+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/01/ex04</id>
    <content type="html"><![CDATA[<p>似乎 Ruby 是<strong>弱类型</strong>的语言，不用声明一个变量的类型即可使用。</p>

<!--more-->


<p>用自己喜欢的方式给变量来命名，我喜欢骆驼(Camel)式的，就像这样 <code>thisVar</code>，不需要 underscore <code>_</code>。</p>

<p>update:</p>

<p>看到一个评论是这样说的：</p>

<blockquote><p>python大小写混合原因是大小写敏感，实际上是java风格；php小写加下划线是语言对大小写不敏感的原因；ruby既大小写敏感，又使用小写加下划线，感觉不伦不类啊。</p></blockquote>

<p>另外， Ruby 的行末竟然是不用加分号<code>;</code>的，太晕了。</p>

<p>``` ruby ex4.rb //ruby.code.kekou.de/code/ex4.rb Download code
cars = 100
passengers = 90
drivers = 30
space_in_a_car = 4.0
cars_not_driven = cars &ndash; drivers
cars_driven = drivers
carpool_capacity = cars_driven * space_in_a_car
average_passengers_per_car = passengers / cars_driven</p>

<p>puts &ldquo;There are #{cars} cars available.&rdquo;
puts &ldquo;There are only #{drivers} drivers available.&rdquo;
puts &ldquo;There will be #{cars_not_driven} empty cars today.&rdquo;
puts &ldquo;We can transport #{carpool_capacity} people today.&rdquo;
puts &ldquo;We have #{passengers} passengers to carpool today.&rdquo;
puts &ldquo;We need to put about #{average_passengers_per_car} in each car.&rdquo;
```</p>

<p>执行后将会输出</p>

<p><code>sh
There are 100 cars available.
There are only 30 drivers available.
There will be 70 empty cars today.
We can transport 120.0 people today.
We have 90 passengers to carpool today.
We need to put about 3 in each car.
</code></p>

<p>Ruby 在输出中调用变量是 <code>#{var}</code> 的形式。总感觉就是 php 的变种。</p>

<p>irb 中用变量名来进行计算：
<code>irb
irb(main):001:0&gt; i = 4
=&gt; 4
irb(main):002:0&gt; s = 3
=&gt; 3
irb(main):003:0&gt; i*s
=&gt; 12
</code>
输入 <code>Ctrl+D</code> 返回命令行/Bash。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 2: 注释和＃号]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/01/ex02/"/>
    <updated>2014-04-01T13:20:46+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/01/ex02</id>
    <content type="html"><![CDATA[<p><code>#</code> 的作用是注释，英文为 octothorpe 或者 pound character。</p>

<!--more-->


<p>一行中， <code>#</code> 之后的所有内容都不会被执行。</p>

<p>``` ruby ex2.rb //ruby.code.kekou.de/code/ex2.rb Download code</p>

<h1>This is comment.</h1>

<p>puts &ldquo;You can see this.&rdquo; #While you will not see this</p>

<h1>This will not run.</h1>

<h1>puts &ldquo;This will not run.&rdquo;</h1>

<p>puts &ldquo;This will run.&rdquo;
```</p>

<p>将会输出</p>

<p>``` sh
C:\Users\Administrator>ruby ex2.rb</p>

<p>You can see this.
This will run.
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 1: 第一个程序]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/03/31/ex01/"/>
    <updated>2014-03-31T22:33:27+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/03/31/ex01</id>
    <content type="html"><![CDATA[<p>将下面的代码复制保存为 <code>ex1.rb</code>，然后执行。</p>

<!--more-->


<p><code>ruby ex1.rb //ruby.code.kekou.de/code/ex1.rb Download code
puts "Hello World!"
puts "Hello Again!"
puts "I use Notepad++."
puts "This is fun."
puts "Yea! I'm printing..."
puts "Well, save this as 'ex1.rb'."
</code></p>

<p>执行后显示</p>

<p><code>bash
E:\SourceCode\GitHub&gt; ruby ex1.rb
Hello World!
Hello Again!
I use Notepad++.
This is fun.
Yea! I'm printing...
Well, save this as 'ex1.rb'.
</code></p>

<p><code>#</code>的作用应该是注释。没有尝试，但是应该错不了。</p>
]]></content>
  </entry>
  
</feed>
