<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Notes for Ruby]]></title>
  <link href="http://ruby.code.kekou.de//blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://ruby.code.kekou.de//"/>
  <updated>2014-04-03T15:24:44+08:00</updated>
  <id>http://ruby.code.kekou.de//</id>
  <author>
    <name><![CDATA[Delbert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ex 20: 函数和文件]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex20/"/>
    <updated>2014-04-03T14:54:15+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex20</id>
    <content type="html"><![CDATA[<p>这一节是写了用来操作文件的函数，包括输出指定行，从头输出等方法。</p>

<!--more-->


<p>``` ruby ex20.rb //ruby.code.kekou.de/code/ex20.rb Download Code
input_file = ARGV[0]</p>

<p>def print_all(f)
  puts f.read()
end</p>

<p>def rewind(f)
  f.seek(0, IO::SEEK_SET)
end</p>

<p>def print_a_line(line_count, f)
  puts &ldquo;#{line_count} #{f.readline()}&rdquo;
end</p>

<p>current_file = File.open(input_file)</p>

<p>puts &ldquo;First let&rsquo;s print the whole file:&rdquo;
puts # a blank line</p>

<p>print_all(current_file)</p>

<p>puts &ldquo;Now let&rsquo;s rewind, kind of like a tape.&rdquo;</p>

<p>rewind(current_file)</p>

<p>puts &ldquo;Let&rsquo;s print three lines:&rdquo;</p>

<p>current_line = 1
print_a_line(current_line, current_file)</p>

<p>current_line = current_line + 1
print_a_line(current_line, current_file)</p>

<p>current_line = current_line + 1
print_a_line(current_line, current_file)
```</p>

<p>执行后输出：</p>

<pre><code>$ruby ex20.rb ex16_sample.txt
First let's print the whole file:

Line One.
Line Two.
Line Three.
Now let's rewind, kind of like a tape.
Let's print three lines:
1 Line One.
2 Line Two.
3 Line Three.
</code></pre>

<p>注释直接写在<a href="//ruby.code.kekou.de/code/ex20.rb" title="源码">源码</a>里面了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 18: 命名、变量、代码、函数]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex18/"/>
    <updated>2014-04-03T12:00:04+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex18</id>
    <content type="html"><![CDATA[<p>这一节要接触函数了，用 <code>def</code> 关键字和 Python 真是像呢。话说，真的是松本看不惯 Python 才写的 Ruby 么？</p>

<!--more-->


<p>``` ruby ex18.rb //ruby.code.kekou.de/code/ex18.rb Download Code</p>

<h1>this one is like your scripts with argv</h1>

<p>def puts_two(*args)
  arg1, arg2 = args
  puts &ldquo;arg1: #{arg1}, arg2: #{arg2}&rdquo;
end</p>

<h1>ok, that *args is actually pointless, we can just do this</h1>

<p>def puts_two_again(arg1, arg2)
  puts &ldquo;arg1: #{arg1}, arg2: #{arg2}&rdquo;
end</p>

<h1>this just takes one argument</h1>

<p>def puts_one(arg1)
  puts &ldquo;arg1: #{arg1}&rdquo;
end</p>

<h1>this one takes no arguments</h1>

<p>def puts_none()
  puts &ldquo;I got nothin'.&rdquo;
end</p>

<p>puts_two(&ldquo;Zed&rdquo;,&ldquo;Shaw&rdquo;)
puts_two_again(&ldquo;Zed&rdquo;,&ldquo;Shaw&rdquo;)
puts_one(&ldquo;First!&rdquo;)
puts_none()
```</p>

<p>定义了四个函数，第一个是用指针方式指定了参数个数，剩余三个则是指定了有限个参数个数。最后调用执行这四个函数。</p>

<ol>
<li>函数定义是以 <code>def</code> 开始的；</li>
<li>Ruby 的规范是以小写字符和 <code>_</code> 下划线来进行连接；</li>
<li>函数名后紧接左括号；</li>
<li>多个参数时应用英文逗号隔开；</li>
<li>参数结束后要用英文右括号结束；</li>
<li>函数体要进行缩进；</li>
<li>与相应的 <code>def</code> 对齐的地方要有 <code>end</code> 来完成函数。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 17: 更多文件操作]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex17/"/>
    <updated>2014-04-03T09:45:55+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex17</id>
    <content type="html"><![CDATA[<p>本节进行文件内容的复制。</p>

<!--more-->


<p>``` ruby ex17.rb //ruby.code.kekou.de/code/ex17.rb Download Code
from_file, to_file = ARGV
script = $0</p>

<p>puts &ldquo;Copying from #{from_file} to #{to_file}&rdquo;</p>

<h1>we could do these two on one line too, how?</h1>

<p>input = File.open(from_file)
indata = input.read()</p>

<h1>input = File.open(from_file).read()</h1>

<p>puts &ldquo;The input file is #{indata.length} bytes long&rdquo;</p>

<p>puts &ldquo;Does the output file exist? #{File.exists? to_file}&rdquo;
puts &ldquo;Ready, hit RETURN to continue, CTRL-C to abort.&rdquo;
STDIN.gets</p>

<p>output = File.open(to_file, &lsquo;w&rsquo;)
output.write(indata)</p>

<p>puts &ldquo;Alright, all done.&rdquo;</p>

<p>output.close()
input.close()
```</p>

<p>执行该文件的时候需要两个参数，输入文件和输出文件。</p>

<p>我使用了上一节的文本</p>

<pre><code>$ruby ex17.rb ex16_sample.txt ex17_sample.txt
Copying from ex16_sample.txt to ex17_sample.txt
The input file is 31 bytes long
Does the output file exist? false
Ready, hit RETURN to continue, CTRL-C to abort.

Alright, all done.
</code></pre>

<p>你可以用 Linux 下的 <code>cat</code> 命令，我也可以用 Windows 下的 <code>COPY</code> 命令来完成复制。</p>

<p>如果没有 <code>close()</code> 是不会保存文件的吧。</p>

<p>至于改写程序，我是这样改写的，最后只用一行完成，测试执行可用。</p>

<p><code>ruby
File.open(ARGV[1], 'w').write(File.open(ARGV[0]).read())
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 16: 读写文件]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex16/"/>
    <updated>2014-04-03T09:45:48+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex16</id>
    <content type="html"><![CDATA[<p>继续文件的读写。本节代码如下：</p>

<!--more-->


<p>``` ruby ex16.rb //ruby.code.kekou.de/code/ex16.rb Download Code
filename = ARGV.first</p>

<h1>script = $0</h1>

<p>puts &ldquo;We&rsquo;re going to erase #{filename}.&rdquo;
puts &ldquo;If you don&rsquo;t want that, hit CTRL-C (^C).&rdquo;
puts &ldquo;If you do want that, hit RETURN.&rdquo;</p>

<p>print &ldquo;? &rdquo;
STDIN.gets</p>

<p>puts &ldquo;Opening the file&hellip;&rdquo;
target = File.open(filename, &lsquo;w&rsquo;)</p>

<p>puts &ldquo;Truncating the file.  Goodbye!&rdquo;
target.truncate(target.size)</p>

<p>puts &ldquo;Now I&rsquo;m going to ask you for three lines.&rdquo;</p>

<p>print &ldquo;line 1: &rdquo;; line1 = STDIN.gets.chomp()
print &ldquo;line 2: &rdquo;; line2 = STDIN.gets.chomp()
print &ldquo;line 3: &rdquo;; line3 = STDIN.gets.chomp()</p>

<p>puts &ldquo;I&rsquo;m going to write these to the file.&rdquo;</p>

<h1>target.write(line1)</h1>

<h1>target.write(&ldquo;\n&rdquo;)</h1>

<h1>target.write(line2)</h1>

<h1>target.write(&ldquo;\n&rdquo;)</h1>

<h1>target.write(line3)</h1>

<h1>target.write(&ldquo;\n&rdquo;)</h1>

<p>contents = &ldquo;#{line1}\n#{line2}\n#{line3}&rdquo;
target.write(contents) # Write the contents with one target.write()</p>

<p>puts &ldquo;And finally, we close it.&rdquo;
target.close()
```</p>

<p>运行命令</p>

<pre><code>$ruby ex16.rb ex16_sample.txt
We're going to erase ex16_sample.txt.
If you don't want that, hit CTRL-C (^C).
If you do want that, hit RETURN.
?
Opening the file...
Truncating the file.  Goodbye!
Now I'm going to ask you for three lines.
line 1: Line One.
line 2: Line Two.
line 3: Line Three.
I'm going to write these to the file.
And finally, we close it.

$cat ex16_sample.txt // replace "cat" with "type" if you use Windows
Line One.
Line Two.
Line Three.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 15: 读取文件]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex15/"/>
    <updated>2014-04-03T09:15:30+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex15</id>
    <content type="html"><![CDATA[<p>从一个文本文件中读取内容，并显示在屏幕上。</p>

<!--more-->


<p><code>text ex15_sample.txt //ruby.code.kekou.de/code/ex15_sample.txt Download Code
This is stuff I typed into a file.
It is really cool stuff.
Lots and lots of fun to have in here.
</code>
程序片段如下</p>

<p>``` ruby ex15.rb //ruby.code.kekou.de/code/ex15.rb Download Code
filename = ARGV.first   # get the first argument.</p>

<p>prompt = &ldquo;> &rdquo;   # as the sign of tip
txt = File.open(filename)   # open the file #{filename}</p>

<p>puts &ldquo;Here&rsquo;s your file: #{filename}&rdquo;    # print the #{filename} with a line feed
puts txt.read() # print the contents out</p>

<p>puts &ldquo;Type the filename again:&rdquo; # input the name of the file
print prompt    # sign of the input tip
file_again = STDIN.gets.chomp() # get the filename without a line feed</p>

<p>txt_again = File.open(file_again)   # get the contents</p>

<p>puts txt_again.read()   # and print it out
```</p>

<p>命令提示符中输出如下：</p>

<pre><code>$ruby ex15.rb ex15_sample.txt
Here's your file: ex15_sample.txt
This is stuff I typed into a file.
It is really cool stuff.
Lots and lots of fun to have in here.
Type the filename again:
&gt; ex15_sample.txt
This is stuff I typed into a file.
It is really cool stuff.
Lots and lots of fun to have in here.
</code></pre>

<p>删掉使用 <code>STDIN.gets</code> 的部分后，提示：</p>

<pre><code>$ruby ex15.rb ex15_sample.txt
Here's your file: ex15_sample.txt
This is stuff I typed into a file.
It is really cool stuff.
Lots and lots of fun to have in here.
Type the filename again:
&gt; ex15.rb:13:in `&lt;main&gt;': undefined local variable or method `file_again' for ma
in:Object (NameError)
</code></pre>

<p>也就是说并不是编译后再执行， Ruby 是一种运行时的语言。</p>

<p>PowerShell 中是有 <code>cat</code> 命令的， CMD 命令行中没有。</p>
]]></content>
  </entry>
  
</feed>
