<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Notes for Ruby]]></title>
  <link href="http://ruby.code.kekou.de//blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://ruby.code.kekou.de//"/>
  <updated>2014-04-03T11:54:38+08:00</updated>
  <id>http://ruby.code.kekou.de//</id>
  <author>
    <name><![CDATA[Delbert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ex 17: 更多文件操作]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/03/ex17/"/>
    <updated>2014-04-03T09:45:55+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/03/ex17</id>
    <content type="html"><![CDATA[<p>本节进行文件内容的复制。</p>

<!--more-->


<p>``` ruby ex17.rb //ruby.code.kekou.de/code/ex17.rb Download Code
from_file, to_file = ARGV
script = $0</p>

<p>puts &ldquo;Copying from #{from_file} to #{to_file}&rdquo;</p>

<h1>we could do these two on one line too, how?</h1>

<p>input = File.open(from_file)
indata = input.read()</p>

<p>puts &ldquo;The input file is #{indata.length} bytes long&rdquo;</p>

<p>puts &ldquo;Does the output file exist? #{File.exists? to_file}&rdquo;
puts &ldquo;Ready, hit RETURN to continue, CTRL-C to abort.&rdquo;
STDIN.gets</p>

<p>output = File.open(to_file, &lsquo;w&rsquo;)
output.write(indata)</p>

<p>puts &ldquo;Alright, all done.&rdquo;</p>

<p>output.close()
input.close()
```</p>

<p>执行该文件的时候需要两个参数，输入文件和输出文件。</p>

<p>我使用了上一节的文本</p>

<pre><code>$ruby ex17.rb ex16_sample.txt ex17_sample.txt
Copying from ex16_sample.txt to ex17_sample.txt
The input file is 31 bytes long
Does the output file exist? false
Ready, hit RETURN to continue, CTRL-C to abort.

Alright, all done.
</code></pre>

<p>你可以用 Linux 下的 <code>cat</code> 命令，我也可以用 Windows 下的 <code>COPY</code> 命令来完成复制。</p>

<p>如果没有 <code>close()</code> 是不会保存文件的吧。</p>

<p>至于改写程序，我是这样改写的，最后只用一行完成，测试执行可用。</p>

<p><code>ruby
File.open(ARGV[1], 'w').write(File.open(ARGV[0]).read())
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 16: 读写文件]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/03/ex16/"/>
    <updated>2014-04-03T09:45:48+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/03/ex16</id>
    <content type="html"><![CDATA[<p>继续文件的读写。本节代码如下：</p>

<!--more-->


<p>``` ruby ex16.rb //ruby.code.kekou.de/code/ex16.rb Download Code
filename = ARGV.first</p>

<h1>script = $0</h1>

<p>puts &ldquo;We&rsquo;re going to erase #{filename}.&rdquo;
puts &ldquo;If you don&rsquo;t want that, hit CTRL-C (^C).&rdquo;
puts &ldquo;If you do want that, hit RETURN.&rdquo;</p>

<p>print &ldquo;? &rdquo;
STDIN.gets</p>

<p>puts &ldquo;Opening the file&hellip;&rdquo;
target = File.open(filename, &lsquo;w&rsquo;)</p>

<p>puts &ldquo;Truncating the file.  Goodbye!&rdquo;
target.truncate(target.size)</p>

<p>puts &ldquo;Now I&rsquo;m going to ask you for three lines.&rdquo;</p>

<p>print &ldquo;line 1: &rdquo;; line1 = STDIN.gets.chomp()
print &ldquo;line 2: &rdquo;; line2 = STDIN.gets.chomp()
print &ldquo;line 3: &rdquo;; line3 = STDIN.gets.chomp()</p>

<p>puts &ldquo;I&rsquo;m going to write these to the file.&rdquo;</p>

<h1>target.write(line1)</h1>

<h1>target.write(&ldquo;\n&rdquo;)</h1>

<h1>target.write(line2)</h1>

<h1>target.write(&ldquo;\n&rdquo;)</h1>

<h1>target.write(line3)</h1>

<h1>target.write(&ldquo;\n&rdquo;)</h1>

<p>contents = &ldquo;#{line1}\n#{line2}\n#{line3}&rdquo;
target.write(contents) # Write the contents with one target.write()</p>

<p>puts &ldquo;And finally, we close it.&rdquo;
target.close()
```</p>

<p>运行命令</p>

<pre><code>$ruby ex16.rb ex16_sample.txt
We're going to erase ex16_sample.txt.
If you don't want that, hit CTRL-C (^C).
If you do want that, hit RETURN.
?
Opening the file...
Truncating the file.  Goodbye!
Now I'm going to ask you for three lines.
line 1: Line One.
line 2: Line Two.
line 3: Line Three.
I'm going to write these to the file.
And finally, we close it.

$cat ex16_sample.txt // replace "cat" with "type" if you use Windows
Line One.
Line Two.
Line Three.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 15: 读取文件]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/03/ex15/"/>
    <updated>2014-04-03T09:15:30+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/03/ex15</id>
    <content type="html"><![CDATA[<p>从一个文本文件中读取内容，并显示在屏幕上。</p>

<!--more-->


<p><code>text ex15_sample.txt //ruby.code.kekou.de/code/ex15_sample.txt Download Code
This is stuff I typed into a file.
It is really cool stuff.
Lots and lots of fun to have in here.
</code>
程序片段如下</p>

<p>``` ruby ex15.rb //ruby.code.kekou.de/code/ex15.rb Download Code
filename = ARGV.first   # get the first argument.</p>

<p>prompt = &ldquo;> &rdquo;   # as the sign of tip
txt = File.open(filename)   # open the file #{filename}</p>

<p>puts &ldquo;Here&rsquo;s your file: #{filename}&rdquo;    # print the #{filename} with a line feed
puts txt.read() # print the contents out</p>

<p>puts &ldquo;Type the filename again:&rdquo; # input the name of the file
print prompt    # sign of the input tip
file_again = STDIN.gets.chomp() # get the filename without a line feed</p>

<p>txt_again = File.open(file_again)   # get the contents</p>

<p>puts txt_again.read()   # and print it out
```</p>

<p>命令提示符中输出如下：</p>

<pre><code>$ruby ex15.rb ex15_sample.txt
Here's your file: ex15_sample.txt
This is stuff I typed into a file.
It is really cool stuff.
Lots and lots of fun to have in here.
Type the filename again:
&gt; ex15_sample.txt
This is stuff I typed into a file.
It is really cool stuff.
Lots and lots of fun to have in here.
</code></pre>

<p>删掉使用 <code>STDIN.gets</code> 的部分后，提示：</p>

<pre><code>$ruby ex15.rb ex15_sample.txt
Here's your file: ex15_sample.txt
This is stuff I typed into a file.
It is really cool stuff.
Lots and lots of fun to have in here.
Type the filename again:
&gt; ex15.rb:13:in `&lt;main&gt;': undefined local variable or method `file_again' for ma
in:Object (NameError)
</code></pre>

<p>也就是说并不是编译后再执行， Ruby 是一种运行时的语言。</p>

<p>PowerShell 中是有 <code>cat</code> 命令的， CMD 命令行中没有。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 12: 模块(Modules)]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/02/ex12/"/>
    <updated>2014-04-02T20:07:56+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/02/ex12</id>
    <content type="html"><![CDATA[<p>上来的那个<del>栗子</del>例子是分析 URL 的。</p>

<!--more-->


<p>``` ruby ex12.rb //ruby.code.kekou.de/code/ex12.rb Download Code
require &lsquo;open-uri&rsquo;</p>

<p>open(&ldquo;<a href="http://baidu.com">http://baidu.com</a>&rdquo;) do |f|
  f.each_line {|line| p line}
  puts f.base_uri         # <a href="http://baidu.com">http://baidu.com</a>
  puts f.content_type     # &ldquo;text/html&rdquo;
  puts f.charset          # &ldquo;iso-8859-1&rdquo;
  puts f.content_encoding # []
  puts f.last_modified    # 2010-01-12 21:48:00 +0800
end
```</p>

<p>貌似和原文说的不是太一样，执行 <code>open</code> 的时候会将整个页面进行输出吗？我在命令行下面是将整个页面都输出了。</p>

<p>用 ruby-lang 的话会产生运行时错误。</p>

<p>我用 <code>http://baidu.com</code> 是因为产生的输出很少。如下：</p>

<pre><code>"&lt;html&gt;\n"
"&lt;meta http-equiv=\"refresh\" content=\"0;url=http://www.baidu.com/\"&gt;\n"
"&lt;/html&gt;\n"
http://baidu.com
text/html
iso-8859-1
2010-01-12 21:48:00 +0800
</code></pre>

<ol>
<li><p>关于 <code>require</code> 和 <code>include</code>，找到了一篇文章： <a href="http://www.cnblogs.com/phaibin/archive/2009/11/06/1597333.html">http://www.cnblogs.com/phaibin/archive/2009/11/06/1597333.html</a>，原文在<a href="http://ionrails.com/2009/09/19/ruby_require-vs-load-vs-include-vs-extend/">这里</a>    。</p></li>
<li><p>貌似不能。</p></li>
<li><p>安装路径下 <code>/lib/ruby/版本号/</code> 中寻找。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 11: 提问]]></title>
    <link href="http://ruby.code.kekou.de//blog/2014/04/02/ex11/"/>
    <updated>2014-04-02T13:56:33+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/2014/04/02/ex11</id>
    <content type="html"><![CDATA[<p>终于到了有输入有输出的一节了。</p>

<!--more-->


<ol>
<li>获取输入。</li>
<li>改变输入的东西。</li>
<li>输出以显示是如何改变的。</li>
</ol>


<p>代码如下（稍作修改）:</p>

<p>``` ruby ex11.rb //ruby.code.kekou.de/code/ex11.rb Download Code
print &ldquo;How old are you?\t &rdquo;
age = gets.chomp()
print &ldquo;How tall are you? \t&rdquo;
height = gets.chomp()
print &ldquo;How much do you weigh? \t&rdquo;
weight = gets.chomp()</p>

<p>puts &ldquo;So, you&rsquo;re #{age} years old, #{height} meters tall and #{weight} kilograms heavy.&rdquo;
```</p>

<p>输出：</p>

<pre><code>How old are you?         24
How tall are you?       1.72
How much do you weigh?  70
So, you're 24 years old, 1.72 meters tall and 70 kilograms heavy.
</code></pre>

<p><code>gets</code> 和 <code>puts</code> 一样，后面会跟一个换行，而 <code>gets.chomp()</code> 的后面是没有换行的。</p>

<p>看了一下， <code>chmop</code> 的作用是移除行末的分离符。</p>
]]></content>
  </entry>
  
</feed>
