<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Notes for Ruby]]></title>
  <link href="http://ruby.code.kekou.de//atom.xml" rel="self"/>
  <link href="http://ruby.code.kekou.de//"/>
  <updated>2014-04-07T22:12:32+08:00</updated>
  <id>http://ruby.code.kekou.de//</id>
  <author>
    <name><![CDATA[Delbert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[来自老程序员的建议]]></title>
    <link href="http://ruby.code.kekou.de//blog/advice/"/>
    <updated>2014-04-07T22:06:20+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/advice</id>
    <content type="html"><![CDATA[<h3>笔记完结</h3>

<p>Delbert 本身都不是个程序员，因此是给不了什么建议的，只能摘抄了。</p>

<!--more-->


<p>英文原版摘抄如下：</p>

<hr />

<p>You&rsquo;ve finished this book and have decided to continue with programming. Maybe it will be a career for you, or maybe it will be a hobby. You&rsquo;ll need some advice to make sure you continue on the right path, and get the most enjoyment out of your newly chosen activity.</p>

<p>I&rsquo;ve been programming for a very long time. So long that it&rsquo;s incredibly boring to me. At the time that I wrote this book, I knew about 20 programming languages and could learn new ones in about a day to a week depending on how weird they were. Eventually though this just became boring and couldn&rsquo;t hold my interest anymore. This doesn&rsquo;t mean I think programming is boring, or that you will think it&rsquo;s boring, only that I find it uninteresting at this point in my journey.</p>

<p>What I discovered after this journey of learning is that it&rsquo;s not the languages that matter but what you do with them. Actually, I always knew that, but I&rsquo;d get distracted by the languages and forget it periodically. Now I never forget it, and neither should you.</p>

<p>Which programming language you learn and use doesn&rsquo;t matter. Do not get sucked into the religion surrounding programming languages as that will only blind you to their true purpose of being your tool for doing interesting things.</p>

<p>Programming as an intellectual activity is the only art form that allows you to create interactive art. You can create projects that other people can play with, and you can talk to them indirectly. No other art form is quite this interactive. Movies flow to the audience in one direction. Paintings do not move. Code goes both ways.</p>

<p>Programming as a profession is only moderately interesting. It can be a good job, but you could make about the same money and be happier running a fast food joint. You&rsquo;re much better off using code as your secret weapon in another profession.</p>

<p>People who can code in the world of technology companies are a dime a dozen and get no respect. People who can code in biology, medicine, government, sociology, physics, history, and mathematics are respected and can do amazing things to advance those disciplines.</p>

<p>Of course, all of this advice is pointless. If you liked learning to write software with this book, you should try to use it to improve your life any way you can. Go out and explore this weird wonderful new intellectual pursuit that barely anyone in the last 50 years has been able to explore. Might as well enjoy it while you can.</p>

<p>Finally, I&rsquo;ll say that learning to create software changes you and makes you different. Not better or worse, just different. You may find that people treat you harshly because you can create software, maybe using words like &ldquo;nerd&rdquo;. Maybe you&rsquo;ll find that because you can dissect their logic that they hate arguing with you. You may even find that simply knowing how a computer works makes you annoying and weird to them.</p>

<p>To this I have just one piece of advice: they can go to hell. The world needs more weird people who know how things work and who love to figure it all out. When they treat you like this, just remember that this is your journey, not theirs. Being different is not a crime, and people who tell you it is are just jealous that you&rsquo;ve picked up a skill they never in their wildest dreams could acquire.</p>

<p>You can code. They cannot. That is pretty damn cool.</p>

<hr />

<p>繁体中文版的翻译：</p>

<hr />

<p>你已經完成了這本書而且打算繼續寫程式。也許這會成為你的一門職業，也許你只是作為業餘愛好玩玩。無論如何，你都需要一些建議以保證你在正確的道路上繼續前行，並且讓這項新的愛好為你帶來最大程度的享受。</p>

<p>我從事寫程式這行已經太長時間，長到對我來說寫程式已經是非常乏味的事情了。我寫這本書的時候，已經懂得大約20 種程式語言，而且可以在大約一天或者一個星期內學會一門程式語言(取決於這門語言有多古怪)。現在對我來說寫程式這件事情已經很無聊，已經談不上什麼興趣了。當然這不是說寫程式本身是一件無聊的事情，也不是說你以後也一定會這樣覺得，這只是我個人在當前的感覺而已。</p>

<p>在這麼久的旅程下來我的體會是：程式語言這東西並不重要，重要的是你用這些語言做的事情。事實上我一直知道這一點，不過以前我會周期性地被各種程式語言分神而忘記了這一點。現在我是永遠不會忘記這一點了，你也不應該忘記這一點。</p>

<p>你學到和用到的程式語言並不重要。不要被圍繞某一種語言的宗教把你扯進去，這只會讓你忘掉了語言的真正目的，也就是作為你的工具來實現有趣的事情。</p>

<p>寫程式作為一項智力活動，是唯一一種能讓你創建交互式藝術的藝術形式。你可以建立專案讓別人使用，而且你可以間接地和使用者溝通。沒有其他的藝術形式能做到如此程度的交互性。電影領著觀眾走向一個方向，繪畫是不會動的。而程式碼卻是雙向互動的。</p>

<p>寫程式作為一項職業只是一般般有趣而已。寫程式可能是一份好工作，但如果你想賺更多的錢而且過得更快樂，你其實開一間快餐分店就可以了。你最好的選擇是將你的程式技術作為你其他職業的秘密武器。</p>

<p>技術公司裡邊會寫程式的人多到一毛錢一打，根本得不到什麼尊敬。而在生物學、醫藥學、政府部門、社會學、物理學、數​​學等行業領域從事寫程式的人就能得到足夠的尊敬，而且你可以使用這項技能在這些領域做出令人驚異的成就。</p>

<p>當然，所有的這些建議都是沒啥意義的。如果你跟著這本書學習寫軟體而且覺得很喜歡這件事情的話，那你完全可以將其當作一門職業去追求。你應該繼續深入拓展這個近五十年來極少有人探索過的奇異而美妙的智力工作領域。若能從中得到樂趣當然就更好了。</p>

<p>最後我要說的是學習創造軟體的過程會改變你而讓你與眾不同。不是說更好或更壞，只是不同了。你也許會發現因為你會寫軟件而人們對你的態度有些怪異，也許會用「怪人「這樣的詞來形容你。也許你會發現因為你會戳穿他們的邏輯漏洞而他們開始討厭和你爭辯。甚至你可能會發現有人因為你懂得電腦怎麼運作而覺得你是個討厭的怪人。</p>

<p>對於這些我只有一個建議: 讓他們去死吧。這個世界需要更多的怪人，他們知道東西是怎麼工作的而且喜歡找到答案。當他們那樣對你時，只要記住這是你的旅程，不是他們的。「與眾不同」不是誰的錯，告訴你「與眾不同是一種錯」的人只是嫉妒你掌握了他們做夢都不能想到的技能而已。</p>

<p>你會寫程式。他們不會。這真他媽的酷。</p>

<hr />

<p>Delbert 最近在泡的论坛 <a href="//www.v2ex.com">V2EX</a> <a href="//ourcodes.com">OurCoders</a> 。</p>

<p>就这样结束吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[下一步]]></title>
    <link href="http://ruby.code.kekou.de//blog/next/"/>
    <updated>2014-04-07T21:58:55+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/next</id>
    <content type="html"><![CDATA[<p>每个人都是某一方面的菜鸟。</p>

<!--more-->


<p>看了一下 <strong><a href="http://mislav.uniqpath.com/poignant-guide/">Why&rsquo;s Guide to Ruby</a></strong> 貌似还挺好玩的，还带着插画，虽然画风实在是接受不能。第二章用的是 Kon&#8217;nichi wa ，是在是被萌了一下。</p>

<p>虽然是全英文，但是还是可以读下来的吧……</p>

<p>全书 7 章。目录看<a href="http://mislav.uniqpath.com/poignant-guide/book/">这里</a>吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 52: 创造你自己的页游]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex52/"/>
    <updated>2014-04-07T21:51:22+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex52</id>
    <content type="html"><![CDATA[<p>课程就这么结束了。</p>

<!--more-->


<p>今天是最后一节，也是一个考核，就是将前面的游戏通过页面呈现出来。</p>

<p>有了想法的话，稍微理清一下思路就可以完成了，不过 Delbert 真的是很懒，写道这里都不想写了。</p>

<p>唉。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 51: 从浏览器中取得输入]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex51/"/>
    <updated>2014-04-07T21:43:23+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex51</id>
    <content type="html"><![CDATA[<p>本节需要有一点 HTML 的知识。</p>

<!--more-->


<p>其实本节主要讲的就是 <code>get</code> 和 <code>post</code> 方式获取数据。而上一节中获取数据的关键字就是通过 <code>get</code> 获取的，那个 <code>'/'</code> 字符也就很容易理解了，是通过浏览器访问的时候默认的地址。</p>

<p>也就是通过 gothonweb 到 view 目录下去寻找不同的 .erb 文件。</p>

<p>此外，本节还说明了一下 sinatra 的模板问题，默认是 layout.erb 这个文件。</p>

<p>更多内容可以查阅 <a href="http://www.sinatrarb.com/intro.html">http://www.sinatrarb.com/intro.html</a> 。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 50: 你的第一个网站]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex50/"/>
    <updated>2014-04-07T20:45:44+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex50</id>
    <content type="html"><![CDATA[<p>好吧，对 Delbert 而言，应该不是第一个了……</p>

<!--more-->


<h3>安装 Sinatra</h3>

<p>在命令行中输入 <code>fem install sinatra</code>:</p>

<pre><code>$ gem install sinatra
Fetching: sinatra-1.4.4.gem (100%)
Successfully installed sinatra-1.4.4
1 gem installed
Installing ri documentation for sinatra-1.4.4...
Installing RDoc documentation for sinatra-1.4.4...
</code></pre>

<h3>写一个简单的 Hello World 项目</h3>

<pre><code>E:\SourceCode\ruby\projects&gt; bundle gem gothonweb
      create  gothonweb/Gemfile
      create  gothonweb/Rakefile
      create  gothonweb/LICENSE.txt
      create  gothonweb/README.md
      create  gothonweb/.gitignore
      create  gothonweb/gothonweb.gemspec
      create  gothonweb/lib/gothonweb.rb
      create  gothonweb/lib/gothonweb/version.rb
Initializing git repo in E:/SourceCode/ruby/projects/gothonweb
warning: LF will be replaced by CRLF in .gitignore.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Gemfile.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in LICENSE.txt.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in README.md.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Rakefile.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in gothonweb.gemspec.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in lib/gothonweb.rb.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in lib/gothonweb/version.rb.
The file will have its original line endings in your working directory.
</code></pre>

<p>直接运行 <code>ruby lib/gothonweb.rb</code> 会得到下面的错误：</p>

<pre><code>lib/gothonweb.rb:5:in `&lt;module:Gothonweb&gt;': undefined method `get' for Gothonweb
:Module (NoMethodError)
        from lib/gothonweb.rb:4:in `&lt;main&gt;'
</code></pre>

<p>根据 SOF <a href="http://stackoverflow.com/questions/16645762/exercise-50-http-ruby-learncodethehardway-org-book-ex50-html-error-while-r">http://stackoverflow.com/questions/16645762/exercise-50-http-ruby-learncodethehardway-org-book-ex50-html-error-while-r</a> 这个来看，是 Sinatra 的版本高了。要么安装低版本的，要么将 <code>Module</code> 注释掉。</p>

<p>剩下的就是解释具体是怎样执行的了。</p>

<p>Update: Sinatra 官网的示例程序是这样的：</p>

<figure class='code'><figcaption><span>Example</span><a href='http://www.sinatrarb.com/intro.html'>Official Site</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># myapp.rb</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="s1">&#39;Hello world!&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 49: 创造句子]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex49/"/>
    <updated>2014-04-07T20:05:59+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex49</id>
    <content type="html"><![CDATA[<p>按照自己的理解解释一下程序吧。</p>

<!--more-->


<p>Match and Peek 里面的 <code>peek</code> 获取第一个单词的 token。不过， token 是什么东西啊？(从后文看，应该是和 symbol 相关的)<code>match</code> 从单词 list 当中取出第一个，如果是所期望的，返回；如果不是，直接抛弃。<code>skip</code> 调用上述两个方法，若是所期望的则返回，若不是则跳过。</p>

<p>这样的话，后面的程序就会输出为最开始的样子了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 48: 高级用户输入]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex48/"/>
    <updated>2014-04-07T18:55:14+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex48</id>
    <content type="html"><![CDATA[<p>有点类似模糊输入的意思。用户的多种输入实际上对应同样的操作。</p>

<!--more-->


<p><strong>分词</strong>： 用 <code>split</code> 方法。</p>

<p><strong>组合</strong>： 用 Ruby 的 struct 结构。目前还不是很清楚。</p>

<p><strong>数字</strong>： 用 <code>Integer</code> 方法。</p>

<p><strong>异常</strong>： 用 <code>begin/rescue</code> ，类似 C++ 里面的 <code>try/catch</code>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 47: 自动化测试]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex47/"/>
    <updated>2014-04-07T18:28:35+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex47</id>
    <content type="html"><![CDATA[<p>在上一节的基础上开始测试。</p>

<!--more-->


<p>这一节繁体中文版在表述上有多处错误：</p>

<ol>
<li>原版的 <strong>Writing A Test Case</strong> 中 “First” 一行，路径是 <code>ex47/test/test_ex47.rb</code>，繁体中文版本则变成了 <code>tests/ex47_tests.rb</code>。</li>
<li>英文原版中创建的文件是 <code>ex47/lib/ex47.rb</code>，到了繁体中文版本则变成了 <code>ex47/lib/game.rb</code> 了。</li>
<li>在 <strong>Testing Guidelines</strong> 中， <code>test</code> 和 <code>tests</code> 傻傻分不清。其实繁体中文版中，整篇文章这两个单词就从来没有分清楚过……</li>
</ol>


<p>按照英文原版的说明来调试，才会跑出正确的结果。</p>

<p>另外，<code>ex47.gemspec</code> 我放不放到路径当中，放到哪个路径当中，对整个测试没有一点儿影响，那么，这个文件是干嘛用的？</p>

<p>只要继承了 <code>Test::Unit::TestCase</code>，就会出现类似 C++ 中编译器编译的效果。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 46: 建立一个项目框架]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex46/"/>
    <updated>2014-04-06T22:24:42+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex46</id>
    <content type="html"><![CDATA[<p>很明显，这一节中所有的内容都是在 *nix 系统下完成的。不过， Windows 系统的 PowerShell 命令应该也可以胜任。不行的话还是架设虚拟机吧。</p>

<!--more-->


<p>按照说明将这一节完成下来了，但是 Windows 下的 <code>mkdir</code> 命令只能一个一个去建立目录，而不能一次建立多个。</p>

<p>前面所有的步骤都完成了，但是在哪里开始编程？</p>

<p>小测验的问题不会做……</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 45: 对象、类和继承关系]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex45/"/>
    <updated>2014-04-06T21:46:18+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex45</id>
    <content type="html"><![CDATA[<p>本节讲到了类与对象， is-a 和 has-a 的关系。</p>

<!--more-->


<p>is-a 是这样的：狗<strong>是一种</strong>动物。</p>

<p>has-a 是这样的： 狗<strong>有一个</strong>名字。</p>

<p>所以，类与类的关系是 is-a，类与其中的成员的关系是 has-a。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Line 6: is-a
</span><span class='line'>Line 10: has-a
</span><span class='line'>Line 16: is-a
</span><span class='line'>Line 20: has-a
</span><span class='line'>Line 26: is-a
</span><span class='line'>Line 32: has-a
</span><span class='line'>Line 40: is-a
</span><span class='line'>Line 44: has-a
</span><span class='line'>Line 46: has-a
</span><span class='line'>Line 52: is-a
</span><span class='line'>Line 57: is-a
</span><span class='line'>Line 62: is-a
</span><span class='line'>Line 70: is-a
</span><span class='line'>Line 73: is-a
</span><span class='line'>Line 76: has-a
</span><span class='line'>Line 79: is-a
</span><span class='line'>Line 82: has-a
</span><span class='line'>Line 85: is-a
</span><span class='line'>Line 88: is-a
</span><span class='line'>Line 91: is-a
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 44: 评估你的游戏]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex44/"/>
    <updated>2014-04-06T21:41:21+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex44</id>
    <content type="html"><![CDATA[<p>评估你的游戏只是本节最后一部分内容，前面说了编程风格和养成良好变成习惯的问题。</p>

<!--more-->


<p>虽然不想写注释，但是如果不写注释的话，真的是会很快忘记你这段代码的作用的，除非是 <code>1+1=2</code> 这种的。</p>

<p>我看 Bullet 的代码，注释真是不多，最起码对我而言是不多，最开始的时候我都不知道应该如何下手。后来还是用 Doxygen 生成了 manual ，虽然还是有很多问题，但还是聊胜于无吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 43: 你来制作一个游戏]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex43/"/>
    <updated>2014-04-06T21:39:20+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex43</id>
    <content type="html"><![CDATA[<p>略。</p>

<!--more-->


<p>我有拖延症，待会儿再说。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 42: 物以类聚]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex42/"/>
    <updated>2014-04-06T21:20:04+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex42</id>
    <content type="html"><![CDATA[<p>本节提到了类的概念，代码太长，懒得粘贴了。</p>

<!--more-->


<p>Ruby 的实例变量是以 <code>@</code> 开头，只对单个对象可见。不管在类的什么地方定义，用的都是同一个。初始化对象函数 <code>initialize</code> 函数可以类比成 C++ 里面的构造函数。</p>

<p>通过 <code>attr_*</code> 来设置实例变量能否被外界读取写入。</p>

<p>类以 <code>Class 类名</code> 开头，对应 <code>end</code> 结束，类的继承用 <code>&lt;</code> 符号。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 41: 来自 Percal 25 号行星的哥顿人(Gothons)]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex41/"/>
    <updated>2014-04-06T17:48:05+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex41</id>
    <content type="html"><![CDATA[<p>这一节我连标题都看不懂好不好……</p>

<!--more-->


<p>本节开始的两行代码我能看懂，但是解释却把我给解释头都大了。<code>method</code> 是一种预先规定好的返回某个特定值的方法，但是繁体中文翻译为“内建”，很无语。</p>

<p>下面这一段看起来挺多，大部分都是输出：</p>

<figure class='code'><figcaption><span>ex41.rb</span><a href='//ruby.code.kekou.de/code/ex41.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">prompt</span><span class="p">()</span>   <span class="c1"># sign of input tips</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;&gt; &quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">death</span><span class="p">()</span> <span class="c1"># game over and output one of the listed sentenses</span>
</span><span class='line'>  <span class="n">quips</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;You died.  You kinda suck at this.&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;Nice job, you died ...jackass.&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;Such a luser.&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;I have a small puppy that&#39;s better at this.&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">quips</span><span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="n">quips</span><span class="o">.</span><span class="n">length</span><span class="p">())</span><span class="o">]</span>
</span><span class='line'>  <span class="no">Process</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">central_corridor</span><span class="p">()</span>  <span class="c1"># input your choice after the prompt sign and generate a key</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;The Gothons of Planet Percal #25 have invaded your ship and destroyed&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;your entire crew.  You are the last surviving member and your last&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;mission is to get the neutron destruct bomb from the Weapons Armory,&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;put it in the bridge, and blow the ship up after getting into an &quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;escape pod.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You&#39;re running down the central corridor to the Weapons Armory when&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;a Gothon jumps out, red scaly skin, dark grimy teeth, and evil clown costume&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;flowing around his hate filled body.  He&#39;s blocking the door to the&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Armory and about to pull a weapon to blast you.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">()</span>
</span><span class='line'>  <span class="n">action</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;shoot!&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Quick on the draw you yank out your blaster and fire it at the Gothon.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;His clown costume is flowing and moving around his body, which throws&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;off your aim.  Your laser hits his costume but misses him entirely.  This&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;completely ruins his brand new costume his mother bought him, which&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;makes him fly into an insane rage and blast you repeatedly in the face until&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;you are dead.  Then he eats you.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;dodge!&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Like a world class boxer you dodge, weave, slip and slide right&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;as the Gothon&#39;s blaster cranks a laser past your head.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;In the middle of your artful dodge your foot slips and you&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;bang your head on the metal wall and pass out.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You wake up shortly after only to die as the Gothon stomps on&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;your head and eats you.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;tell a joke&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Lucky for you they made you learn Gothon insults in the academy.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You tell the one Gothon joke you know:&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Lbhe zbgure vf fb sng, jura fur fvgf nebhaq gur ubhfr, fur fvgf nebhaq gur ubhfr.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The Gothon stops, tries not to laugh, then busts out laughing and can&#39;t move.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;While he&#39;s laughing you run up and shoot him square in the head&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;putting him down, then jump through the Weapon Armory door.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:laser_weapon_armory</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;DOES NOT COMPUTE!&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:central_corridor</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">laser_weapon_armory</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You do a dive roll into the Weapon Armory, crouch and scan the room&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;for more Gothons that might be hiding.  It&#39;s dead quiet, too quiet.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You stand up and run to the far side of the room and find the&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;neutron bomb in its container.  There&#39;s a keypad lock on the box&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;and you need the code to get the bomb out.  If you get the code&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;wrong 10 times then the lock closes forever and you can&#39;t&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;get the bomb.  The code is 3 digits.&quot;</span>
</span><span class='line'>  <span class="n">code</span> <span class="o">=</span> <span class="s2">&quot;%s%s%s&quot;</span> <span class="o">%</span> <span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;[keypad]&gt; &quot;</span>
</span><span class='line'>  <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>  <span class="n">guesses</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span> <span class="n">guess</span> <span class="o">!=</span> <span class="n">code</span> <span class="ow">and</span> <span class="n">guesses</span> <span class="o">&lt;</span> <span class="mi">10</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;BZZZZEDDD!&quot;</span>
</span><span class='line'>    <span class="n">guesses</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="nb">print</span> <span class="s2">&quot;[keypad]&gt; &quot;</span>
</span><span class='line'>    <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">guess</span> <span class="o">==</span> <span class="n">code</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The container clicks open and the seal breaks, letting gas out.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You grab the neutron bomb and run as fast as you can to the&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;bridge where you must place it in the right spot.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:the_bridge</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The lock buzzes one last time and then you hear a sickening&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;melting sound as the mechanism is fused together.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You decide to sit there, and finally the Gothons blow up the&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;ship from their ship and you die.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">the_bridge</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You burst onto the Bridge with the netron destruct bomb&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;under your arm and surprise 5 Gothons who are trying to&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;take control of the ship.  Each of them has an even uglier&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;clown costume than the last.  They haven&#39;t pulled their&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;weapons out yet, as they see the active bomb under your&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;arm and don&#39;t want to set it off.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">()</span>
</span><span class='line'>  <span class="n">action</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;throw the bomb&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;In a panic you throw the bomb at the group of Gothons&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;and make a leap for the door.  Right as you drop it a&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Gothon shoots you right in the back killing you.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;As you die you see another Gothon frantically try to disarm&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;the bomb. You die knowing they will probably blow up when&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;it goes off.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;slowly place the bomb&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You point your blaster at the bomb under your arm&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;and the Gothons put their hands up and start to sweat.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You inch backward to the door, open it, and then carefully&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;place the bomb on the floor, pointing your blaster at it.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You then jump back through the door, punch the close button&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;and blast the lock so the Gothons can&#39;t get out.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Now that the bomb is placed you run to the escape pod to&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;get off this tin can.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:escape_pod</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;DOES NOT COMPUTE!&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:the_bridge</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">escape_pod</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You rush through the ship desperately trying to make it to&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;the escape pod before the whole ship explodes.  It seems like&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;hardly any Gothons are on the ship, so your run is clear of&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;interference.  You get to the chamber with the escape pods, and&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;now need to pick one to take.  Some of them could be damaged&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;but you don&#39;t have time to look.  There&#39;s 5 pods, which one&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;do you take?&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">good_pod</span> <span class="o">=</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;[pod #]&gt;&quot;</span>
</span><span class='line'>  <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">guess</span><span class="o">.</span><span class="n">to_i</span> <span class="o">!=</span> <span class="n">good_pod</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You jump into pod %s and hit the eject button.&quot;</span> <span class="o">%</span> <span class="n">guess</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The pod escapes out into the void of space, then&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;implodes as the hull ruptures, crushing your body&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;into jam jelly.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You jump into pod %s and hit the eject button.&quot;</span> <span class="o">%</span> <span class="n">guess</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The pod easily slides out into space heading to&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;the planet below.  As it flies to the planet, you look&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;back and see your ship implode then explode like a&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;bright star, taking out the Gothon ship at the same&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;time.  You won!&quot;</span>
</span><span class='line'>    <span class="no">Process</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">ROOMS</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">:death</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:death</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:central_corridor</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:central_corridor</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:laser_weapon_armory</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:laser_weapon_armory</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:the_bridge</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:the_bridge</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:escape_pod</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:escape_pod</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">runner</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">start</span><span class="p">)</span>
</span><span class='line'>  <span class="n">next_one</span> <span class="o">=</span> <span class="n">start</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">room</span> <span class="o">=</span> <span class="n">map</span><span class="o">[</span><span class="n">next_one</span><span class="o">]</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">--------&quot;</span>
</span><span class='line'>    <span class="n">next_one</span> <span class="o">=</span> <span class="n">room</span><span class="o">.</span><span class="n">call</span><span class="p">()</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">runner</span><span class="p">(</span><span class="no">ROOMS</span><span class="p">,</span> <span class="ss">:central_corridor</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>搜了一下，以 <code>:</code> 开头的 symbol 对象。最长应的是作为哈希表的 key。虽然明白代码是执行了 <code>runner()</code> 中的 <code>next_one = room.call()</code> 语句，但是却始终没找到 <code>method</code> 相关的说明。 <code>[]</code> 中的是 key，函数是从 <code>ROOMS[:central_corridor]</code> 开始执行，但是 <code>call</code> 和 <code>method</code> 到底是有怎样的关联呢？</p>

<p>根据上一节的代码：</p>

<pre><code>cities[:find] = method(:find_city)
</code></pre>

<p>可以这样认为，<code>method</code> 去查找后面 symbol 对应的方法来执行。 <code>call</code> 前面是对应 symbol 的方法，<code>call</code> 的括号内是该方法的参数。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 40: hash,可爱的 hash]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex40/"/>
    <updated>2014-04-06T16:52:13+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex40</id>
    <content type="html"><![CDATA[<p>Ruby 的 hash 是一种 key-value 类型的容器，可以通过 key 的值来索引到对应的 value。 Hash 是没有顺序的，不能通过 index 来得到对应的 value。 Hash 现在简体中文一般翻译为<strong>哈希</strong>。</p>

<!--more-->


<p>可以直接在 irb 中这样定义一个数组：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :015 &gt; things = [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]</span>
</span><span class='line'><span class="go"> =&gt; [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :016 &gt; print things[1]</span>
</span><span class='line'><span class="go">b =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :017 &gt; things[1] = &#39;z&#39;</span>
</span><span class='line'><span class="go"> =&gt; &quot;z&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :018 &gt; print things[1]</span>
</span><span class='line'><span class="go">z =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :019 &gt; print things</span>
</span><span class='line'><span class="go">[&quot;a&quot;, &quot;z&quot;, &quot;c&quot;, &quot;d&quot;] =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>实际上，数组相当于用数字来当 key 的 hash。当将数字替换为其他的东西之后，就变成了这样：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :001 &gt; stuff = {:name =&gt; &quot;Rob&quot;, :age =&gt; 30, :height =&gt; 5*12+10}</span>
</span><span class='line'><span class="go"> =&gt; {:name=&gt;&quot;Rob&quot;, :age=&gt;30, :height=&gt;70}</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :002 &gt; puts stuff[:name]</span>
</span><span class='line'><span class="go">Rob</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :003 &gt; puts stuff[:age]</span>
</span><span class='line'><span class="go">30</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :004 &gt; puts stuff[:height]</span>
</span><span class='line'><span class="go">70</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :005 &gt; stuff[:city] = &quot;New York&quot;</span>
</span><span class='line'><span class="go"> =&gt; &quot;New York&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :006 &gt; puts stuff[:city]</span>
</span><span class='line'><span class="go">New York</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>当明确指明了对应的 k-w 之后，数字便不再是索引(index)，而变成了 key，例如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :004 &gt; stuff[1] = &quot;Wow&quot;</span>
</span><span class='line'><span class="go"> =&gt; &quot;Wow&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :005 &gt; stuff[2] = &quot;Neato&quot;</span>
</span><span class='line'><span class="go"> =&gt; &quot;Neato&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :006 &gt; puts stuff[1]</span>
</span><span class='line'><span class="go">Wow</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :007 &gt; puts stuff[2]</span>
</span><span class='line'><span class="go">Neato</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :008 &gt; puts stuff</span>
</span><span class='line'><span class="go">{:name=&gt;&quot;Rob&quot;, :age=&gt;30, :height=&gt;70, :city=&gt;&quot;New York&quot;, 1=&gt;&quot;Wow&quot;, 2=&gt;&quot;Neato&quot;}</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>删除其中的元素也是通过调用 key 来实现的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :009 &gt; stuff.delete(:city)</span>
</span><span class='line'><span class="go"> =&gt; &quot;New York&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :010 &gt; stuff.delete(1)</span>
</span><span class='line'><span class="go"> =&gt; &quot;Wow&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :011 &gt; stuff.delete(2)</span>
</span><span class='line'><span class="go"> =&gt; &quot;Neato&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :012 &gt; stuff</span>
</span><span class='line'><span class="go"> =&gt; {:name=&gt;&quot;Rob&quot;, :age=&gt;30, :height=&gt;70}</span>
</span></code></pre></td></tr></table></div></figure>


<p>下面是通过 key 来查询对应州的名字的一段代码，我们完全可以自己写一个通过区号查地区的程序(好像工作量有点大)：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cities</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;CA&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;San Francisco&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;MI&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Detroit&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;FL&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Jacksonville&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="s1">&#39;NY&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;New York&#39;</span>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="s1">&#39;OR&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;Portland&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">find_city</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">state</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">map</span><span class="o">.</span><span class="n">include?</span> <span class="n">state</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">map</span><span class="o">[</span><span class="n">state</span><span class="o">]</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">return</span> <span class="s2">&quot;Not found.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ok pay attention!</span>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="ss">:find</span><span class="o">]</span> <span class="o">=</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:find_city</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="kp">true</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;State? (ENTER to quit) &quot;</span>
</span><span class='line'>  <span class="n">state</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">break</span> <span class="k">if</span> <span class="n">state</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># this line is the most important ever! study!</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">cities</span><span class="o">[</span><span class="ss">:find</span><span class="o">].</span><span class="n">call</span><span class="p">(</span><span class="n">cities</span><span class="p">,</span> <span class="n">state</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 39: 数组的操作]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex39/"/>
    <updated>2014-04-06T16:07:11+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex39</id>
    <content type="html"><![CDATA[<p>本文说了一些数组的操作。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ten_things</span> <span class="o">=</span> <span class="s2">&quot;Apples Oranges Crows Telephone Light Sugar&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Wait there&#39;s not 10 things in that list, let&#39;s fix that.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">stuff</span> <span class="o">=</span> <span class="n">ten_things</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">more_stuff</span> <span class="o">=</span> <span class="sx">%w(Day Night Song Frisbee Corn Banana Girl Boy)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">stuff</span><span class="o">.</span><span class="n">length</span> <span class="o">!=</span> <span class="mi">10</span>
</span><span class='line'>  <span class="n">next_one</span> <span class="o">=</span> <span class="n">more_stuff</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Adding: </span><span class="si">#{</span><span class="n">next_one</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">stuff</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">next_one</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;There&#39;s </span><span class="si">#{</span><span class="n">stuff</span><span class="o">.</span><span class="n">length</span><span class="si">}</span><span class="s2"> items now.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;There we go: </span><span class="si">#{</span><span class="n">stuff</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Let&#39;s do some things with stuff.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">[-</span><span class="mi">1</span><span class="o">]</span> <span class="c1"># whoa! fancy</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span> <span class="c1"># what? cool!</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">values_at</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;#&#39;</span><span class="p">)</span> <span class="c1"># super stellar!</span>
</span></code></pre></td></tr></table></div></figure>


<p>用到了 <code>split</code> <code>pop</code> <code>join</code> 等方法。</p>

<ul>
<li><code>split</code>: 一个最基本的字符串操作是把一个字符串分割成多个子字符串。</li>
<li><code>pop</code>: 返回数组最后一个元素并删除。</li>
<li><code>shift</code>: 返回数组第一个元素并删除，剩余元素依次提前。</li>
<li><code>join</code>: 连接数组的元素。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 38: 阅读代码]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex38/"/>
    <updated>2014-04-06T16:05:24+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex38</id>
    <content type="html"><![CDATA[<p>和第 23 节的工作差不多，仍然是阅读代码。</p>

<!--more-->


<p>不过这个阅读代码要尝试自己加上注释，尝试运行，尝试画出程序的流程图。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 37: 复习各种符号。]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex37/"/>
    <updated>2014-04-06T15:55:43+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex37</id>
    <content type="html"><![CDATA[<p>本节列出了 Ruby 的关键字，操作法等，可以自行复习或查阅资料了解。</p>

<!--more-->


<h3>关键字</h3>

<ul>
<li><code>alias</code></li>
<li><code>and</code></li>
<li><code>BEGIN</code></li>
<li><code>begin</code></li>
<li><code>break</code></li>
<li><code>case</code></li>
<li><code>class</code></li>
<li><code>def</code></li>
<li><code>defined?</code></li>
<li><code>do</code></li>
<li><code>else</code></li>
<li><code>elsif</code></li>
<li><code>END</code></li>
<li><code>end</code></li>
<li><code>ensure</code></li>
<li><code>false</code></li>
<li><code>for</code></li>
<li><code>if</code></li>
<li><code>in</code></li>
<li><code>module</code></li>
<li><code>next</code></li>
<li><code>nil</code></li>
<li><code>not</code></li>
<li><code>or</code></li>
<li><code>redo</code></li>
<li><code>rescue</code></li>
<li><code>retry</code></li>
<li><code>return</code></li>
<li><code>self</code></li>
<li><code>super</code></li>
<li><code>then</code></li>
<li><code>true</code></li>
<li><code>undef</code></li>
<li><code>unless</code></li>
<li><code>until</code></li>
<li><code>when</code></li>
<li><code>while</code></li>
<li><code>yield</code></li>
</ul>


<h3>数据类型</h3>

<ul>
<li><code>true</code></li>
<li><code>false</code></li>
<li><code>nil</code></li>
<li><code>constants</code></li>
<li><code>strings</code></li>
<li><code>numbers</code></li>
<li><code>ranges</code></li>
<li><code>arrays</code></li>
<li><code>hashes</code></li>
</ul>


<h3>转义符</h3>

<ul>
<li><code>\\</code></li>
<li><code>\'</code></li>
<li><code>\"</code></li>
<li><code>\a</code></li>
<li><code>\b</code></li>
<li><code>\f</code></li>
<li><code>\n</code></li>
<li><code>\r</code></li>
<li><code>\t</code></li>
<li><code>\v</code></li>
</ul>


<h3>操作符</h3>

<ul>
<li><code>::</code></li>
<li><code>[]</code></li>
<li><code>**</code></li>
<li><code>-(unary)</code></li>
<li><code>+(unary)</code></li>
<li><code>!</code></li>
<li><code>~</code></li>
<li><code>*</code></li>
<li><code>/</code></li>
<li><code>%</code></li>
<li><code>+</code></li>
<li><code>-</code></li>
<li><code>&lt;&lt;</code></li>
<li><code>&gt;&gt;</code></li>
<li><code>&amp;</code></li>
<li><code>|</code></li>
<li><code>&gt;</code></li>
<li><code>&gt;=</code></li>
<li><code>&lt;</code></li>
<li><code>&lt;=</code></li>
<li><code>&lt;=&gt;</code></li>
<li><code>==</code></li>
<li><code>===</code></li>
<li><code>!=</code></li>
<li><code>=~</code></li>
<li><code>!~</code></li>
<li><code>&amp;&amp;</code></li>
<li><code>||</code></li>
<li><code>..</code></li>
<li><code>...</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 36: 设计和测试]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex36/"/>
    <updated>2014-04-06T15:47:03+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex36</id>
    <content type="html"><![CDATA[<p>本节写了一些设计和测试需要注意的地方，其他语言也应该同样注意。</p>

<!--more-->


<p>算是触类旁通吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 35: 分支(branches)和函数(functions)]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex35/"/>
    <updated>2014-04-06T15:31:17+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex35</id>
    <content type="html"><![CDATA[<p>本节是前面几个练习的综合。</p>

<!--more-->


<p>另：<code>to_i</code> 是 Ruby 中将字符串转换为数值的方法，该方法可以忽略数字以外的东西。 <code>Interger()</code> 的功能类似，但是如果输入数字以外的东西，则会报错。</p>

<p>以下来自 <a href="http://ruby-china.org/topics/1227">Ruby-China</a></p>

<blockquote><p>Interger:</p></blockquote>

<pre><code>1.9.3p0 :011 &gt; Integer("123")
 =&gt; 123 
1.9.3p0 :012 &gt; Integer("123hello")
ArgumentError: invalid value for Integer(): "123hello"
</code></pre>

<blockquote><p>to_i</p></blockquote>

<pre><code>1.9.2p290 :006 &gt; "123t".to_i
 =&gt; 123 
1.9.2p290 :007 &gt; "t".to_i
 =&gt; 0 
1.9.2p290 :008 &gt; "".to_i
 =&gt; 0 
1.9.2p290 :009 &gt; nil.to_i
 =&gt; 0 
</code></pre>
]]></content>
  </entry>
  
</feed>
