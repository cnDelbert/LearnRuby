<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Notes for Ruby]]></title>
  <link href="http://ruby.code.kekou.de//atom.xml" rel="self"/>
  <link href="http://ruby.code.kekou.de//"/>
  <updated>2014-04-06T14:35:22+08:00</updated>
  <id>http://ruby.code.kekou.de//</id>
  <author>
    <name><![CDATA[Delbert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ex 32: 循环和数组]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex32/"/>
    <updated>2014-04-06T14:13:32+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex32</id>
    <content type="html"><![CDATA[<p><code>array</code> 被翻译为<strong>阵列</strong>感觉怪怪的，但是简体中文里面的<strong>数组</strong>貌似也好不到什么地方去。</p>

<!--more-->




<figure class='code'><figcaption><span>数组</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">the_count</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span>
</span><span class='line'><span class="n">fruits</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;apples&#39;</span><span class="p">,</span> <span class="s1">&#39;oranges&#39;</span><span class="p">,</span> <span class="s1">&#39;pears&#39;</span><span class="p">,</span> <span class="s1">&#39;apricots&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">change</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;pennies&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;dimes&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;quarters&#39;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>数组是用方括号 <code>[]</code> 括起来，中间用逗号间隔的。</p>

<p>本节的循环是 <code>for</code> 循环。</p>

<figure class='code'><figcaption><span>ex32.rb</span><a href='//ruby.code.kekou.de/code/ex32.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">the_count</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span>
</span><span class='line'><span class="n">fruits</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;apples&#39;</span><span class="p">,</span> <span class="s1">&#39;oranges&#39;</span><span class="p">,</span> <span class="s1">&#39;pears&#39;</span><span class="p">,</span> <span class="s1">&#39;apricots&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">change</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;pennies&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;dimes&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;quarters&#39;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># this first kind of for-loop goes through an array</span>
</span><span class='line'><span class="k">for</span> <span class="n">number</span> <span class="k">in</span> <span class="n">the_count</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;This is count </span><span class="si">#{</span><span class="n">number</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># same as above, but using a block instead</span>
</span><span class='line'><span class="n">fruits</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">fruit</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;A fruit of type: </span><span class="si">#{</span><span class="n">fruit</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># also we can go through mixed arrays too</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">change</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;I got </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># we can also build arrays, first start with an empty one</span>
</span><span class='line'><span class="n">elements</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># then use a range object to do 0 to 5 counts</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Adding </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2"> to the list.&quot;</span>
</span><span class='line'>  <span class="c1"># push is a function that arrays understand</span>
</span><span class='line'>  <span class="n">elements</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># now we can puts them out too</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">elements</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Element was: </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意符号范围符 <code>..</code> 和 <code>...</code> 的区别：前者包含对象的范围终点，而后者不包含。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 31: 做出决定]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex31/"/>
    <updated>2014-04-06T14:06:10+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex31</id>
    <content type="html"><![CDATA[<p>之前的函数都是 <code>顺序结构</code>，有 <code>if/else</code> 的是<code>分支结构</code>，剩下的一种是<code>循环结构</code>。所有的程序都是由这三种结构派生演变出来的。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">prompt</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;&gt; &quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;You enter a dark room with two doors.  Do you go through door #1 or door #2?&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">prompt</span><span class="p">;</span> <span class="n">door</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">door</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;There&#39;s a giant bear here eating a cheese cake.  What do you do?&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;1. Take the cake.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;2. Scream at the bear.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">;</span> <span class="n">bear</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">bear</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The bear eats your face off.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">bear</span> <span class="o">==</span> <span class="s2">&quot;2&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The bear eats your legs off.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Well, doing </span><span class="si">#{</span><span class="n">bear</span><span class="si">}</span><span class="s2"> is probably better.  Bear runs away.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">elsif</span> <span class="n">door</span> <span class="o">==</span> <span class="s2">&quot;2&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You stare into the endless abyss at Cthuhlu&#39;s retina.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;1. Blueberries.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;2. Yellow jacket clothespins.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;3. Understanding revolvers yelling melodies.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">;</span> <span class="n">insanity</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">insanity</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span> <span class="ow">or</span> <span class="n">insanity</span> <span class="o">==</span> <span class="s2">&quot;2&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Your body survives powered by a mind of jello.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The insanity rots your eyes into a pool of muck.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You stumble around and fall on a knife and die.  Good job!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>判断用户所输入的，根据用户的输入来选择不同的分支。</p>

<p>写在一行中的程序用 <code>;</code> 间隔，但是行末没有分号感觉好别扭啊。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 30: else 和 if]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex30/"/>
    <updated>2014-04-06T14:01:47+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex30</id>
    <content type="html"><![CDATA[<p>在上一节的基础上加上了 <code>else</code>，多了一个判断分支。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">people</span> <span class="o">=</span> <span class="mi">30</span>
</span><span class='line'><span class="n">cars</span> <span class="o">=</span> <span class="mi">40</span>
</span><span class='line'><span class="n">buses</span> <span class="o">=</span> <span class="mi">15</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">cars</span> <span class="o">&gt;</span> <span class="n">people</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;We should take the cars.&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">cars</span> <span class="o">&lt;</span> <span class="n">people</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;We should not take the cars.&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;We can&#39;t decide.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">buses</span> <span class="o">&gt;</span> <span class="n">cars</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;That&#39;s too many buses.&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">buses</span> <span class="o">&lt;</span> <span class="n">cars</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Maybe we could take the buses.&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;We still can&#39;t decide.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&gt;</span> <span class="n">buses</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Alright, let&#39;s just take the buses.&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Fine, let&#39;s stay home then.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>多了两个关键字：<code>elsif</code> 和 <code>else</code>。前者用于分支中还有判断的情况，后者用于最后一个分支，包含其他未被包含的所有情况。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 29: 如果(if)]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex29/"/>
    <updated>2014-04-06T13:56:24+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex29</id>
    <content type="html"><![CDATA[<p><code>if</code> 是最基本的条件判断语句，虽然在不同语言中形式不同但是作用和思想都是一样的。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">people</span> <span class="o">=</span> <span class="mi">20</span>
</span><span class='line'><span class="n">cats</span> <span class="o">=</span> <span class="mi">30</span>
</span><span class='line'><span class="n">dogs</span> <span class="o">=</span> <span class="mi">15</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&lt;</span> <span class="n">cats</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Too many cats! The world is doomed!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&gt;</span> <span class="n">cats</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Not many cats! The world is saved!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&lt;</span> <span class="n">dogs</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;The world is drooled on!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&gt;</span> <span class="n">dogs</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;The world is dry!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">dogs</span> <span class="o">+=</span> <span class="mi">5</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&gt;=</span> <span class="n">dogs</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;People are greater than or equal to dogs.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&lt;=</span> <span class="n">dogs</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;People are less than or equal to dogs.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">==</span> <span class="n">dogs</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;People are dogs.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>就不写运行后的输出了。</p>

<p><code>if</code> 后面的条件为真，则执行与其对应的 <code>end</code> 之间的语句，否则直接跳过。注意 Ruby 是缩进两个空格，而且要严格执行缩进。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 28: 布尔值表达式练习]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex28/"/>
    <updated>2014-04-03T21:09:44+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex28</id>
    <content type="html"><![CDATA[<p>本节是用 IRB 进行交互练习。</p>

<!--more-->


<p>Delbert 建议到 Codecademy 上根据要求完成一些练习，以便加深印象。</p>

<p><a href="http://www.codecademy.com/tracks/ruby">http://www.codecademy.com/tracks/ruby</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 27: 记忆逻辑关系]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex27/"/>
    <updated>2014-04-03T21:09:38+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex27</id>
    <content type="html"><![CDATA[<p>这一节是<em>与</em>、<em>或</em>、<em>非</em>的关系，之前有过程序基础或数字电路基础的同学可以略过。</p>

<!--more-->


<p>稍微有点逻辑基础即可知道，但是这是以后编程的基础。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 26: 恭喜你，现在来考试啦！]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex26/"/>
    <updated>2014-04-03T19:59:14+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex26</id>
    <content type="html"><![CDATA[<p>从官网下载一个文本，将其修改正确能够运行。</p>

<!--more-->




<figure class='code'><figcaption><span>ex26.rb</span><a href='//ruby.code.kekou.de/code/ex26.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># This function will break up words for us.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">break_words</span><span class="p">(</span><span class="n">stuff</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">stuff</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">words</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Sorts the words.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">sort_words</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">sorted</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Prints the first word after popping it off.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">word</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="n">poop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">word</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Prints the last word after popping it off.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">word</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">word</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Takes in a full sentence and returns the sorted words.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">sort_sentence</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">break_words</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">sort_words</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Puts the first and last words of the sentence.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_first_and_last</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">break_words</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">puts_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">puts_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Sorts the words then prints the first and last one.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_first_and_last_sorted</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">sort_sentence</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">puts_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">puts_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Let&#39;s practice everything.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s1">&#39;You\&#39;d need to know \&#39;bout escapes with \\ that do \n newlines and \t tabs.&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">poem</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="no">POEM</span>
</span><span class='line'><span class="sh">\tThe lovely world</span>
</span><span class='line'><span class="sh">with logic so firmly planted</span>
</span><span class='line'><span class="sh">cannot discern \n the needs of love</span>
</span><span class='line'><span class="sh">nor comprehend passion from intuition</span>
</span><span class='line'><span class="sh">and requires an explantion</span>
</span><span class='line'><span class="sh">\n\t\twhere there is none.</span>
</span><span class='line'><span class="no">POEM</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--------------&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">poem</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--------------&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">five</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">3</span> <span class="o">-</span> <span class="mi">5</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;This should be five: %s&quot;</span> <span class="o">%</span> <span class="n">five</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">secret_formula</span><span class="p">(</span><span class="n">started</span><span class="p">)</span>
</span><span class='line'>    <span class="n">jelly_beans</span> <span class="o">=</span> <span class="n">started</span> <span class="o">*</span> <span class="mi">500</span>
</span><span class='line'>    <span class="n">jars</span> <span class="o">=</span> <span class="n">jelly_beans</span> <span class="p">\</span> <span class="mi">1000</span>
</span><span class='line'>    <span class="n">crates</span> <span class="o">=</span> <span class="n">jars</span> <span class="o">/</span> <span class="mi">100</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">jelly_beans</span><span class="p">,</span> <span class="n">jars</span><span class="p">,</span> <span class="n">crates</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">start_point</span> <span class="o">=</span> <span class="mi">10000</span>
</span><span class='line'><span class="n">beans</span><span class="p">,</span> <span class="n">jars</span><span class="p">,</span> <span class="n">crates</span> <span class="o">==</span> <span class="n">secret_formula</span><span class="p">(</span><span class="n">start</span><span class="o">-</span><span class="n">point</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;With a starting point of: %d&quot;</span> <span class="o">%</span> <span class="n">start_point</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We&#39;d have %d jeans, %d jars, and %d crates.&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">beans</span><span class="p">,</span> <span class="n">jars</span><span class="p">,</span> <span class="n">crates</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">start_point</span> <span class="o">=</span> <span class="n">start_point</span> <span class="o">/</span> <span class="mi">10</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We can also do that this way:&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We&#39;d have %d beans, %d jars, and %d crabapples.&quot;</span> <span class="o">%</span> <span class="n">secret_formula</span><span class="p">(</span><span class="n">start_pont</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">sentence</span> <span class="o">=</span> <span class="s2">&quot;All god</span><span class="se">\t</span><span class="s2">things come to those who weight.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">words</span> <span class="o">=</span> <span class="n">ex25</span><span class="o">.</span><span class="n">break_words</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'><span class="n">sorted_words</span> <span class="o">=</span> <span class="n">ex25</span><span class="o">.</span><span class="n">sort_words</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">puts_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="n">puts_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="o">.</span><span class="n">puts_first_word</span><span class="p">(</span><span class="n">sorted_words</span><span class="p">)</span>
</span><span class='line'><span class="n">puts_last_word</span><span class="p">(</span><span class="n">sorted_words</span><span class="p">)</span>
</span><span class='line'><span class="n">sorted_words</span> <span class="o">=</span> <span class="n">ex25</span><span class="o">.</span><span class="n">sort_sentence</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'><span class="n">prin</span> <span class="n">sorted_words</span>
</span><span class='line'>
</span><span class='line'><span class="n">puts_irst_and_last</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">puts_first_a_last_sorted</span><span class="p">(</span><span class="n">senence</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>也就是上面这段代码了。</p>

<p>Delbert 将修改后的代码放在<a href="//ruby.code.kekou.de/code/ex26-correct.rb" title="修改后源码">这里</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 25: 更多更多的练习]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex25/"/>
    <updated>2014-04-03T19:37:49+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex25</id>
    <content type="html"><![CDATA[<p>本节的内容给封装成一个模块(Module)了，是可以调用的哦。</p>

<!--more-->




<figure class='code'><figcaption><span>ex25.rb</span><a href='//ruby.code.kekou.de/code/ex25.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Ex25</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">break_words</span><span class="p">(</span><span class="n">stuff</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># This function will break up words for us.</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">stuff</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">sort_words</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Sorts the words.</span>
</span><span class='line'>    <span class="n">words</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">print_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Prints the first word and shifts the others down by one.</span>
</span><span class='line'>    <span class="n">word</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="n">shift</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">word</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">print_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Prints the last word after popping it off the end.</span>
</span><span class='line'>    <span class="n">word</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">word</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">sort_sentence</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Takes in a full sentence and returns the sorted words.</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">break_words</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sort_words</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">print_first_and_last</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Prints the first and last words of the sentence.</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">break_words</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">print_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">print_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">print_first_and_last_sorted</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Sorts the words then prints the first and last one.</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">sort_sentence</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">print_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">print_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意这里正常方式运行，是没有任何输出的。因为内部都是函数，却没有任何调用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 24: 更多练习]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex24/"/>
    <updated>2014-04-03T16:04:23+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex24</id>
    <content type="html"><![CDATA[<p>就是将之前的给综合起来了，这一节明确使用了 <code>return</code> 关键字。</p>

<!--more-->




<figure class='code'><figcaption><span>ex24.rb</span><a href='//ruby.code.kekou.de/code/ex24.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Let&#39;s practice everything.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;You</span><span class="se">\&#39;</span><span class="s2">d need to know </span><span class="se">\&#39;</span><span class="s2">bout escapes with </span><span class="se">\\</span><span class="s2"> that do </span><span class="se">\n</span><span class="s2"> newlines and </span><span class="se">\t</span><span class="s2"> tabs.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">poem</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="no">MULTI_LINE_STRING</span>
</span><span class='line'>
</span><span class='line'><span class="sh">\tThe lovely world</span>
</span><span class='line'><span class="sh">with logic so firmly planted</span>
</span><span class='line'><span class="sh">cannot discern \n the needs of love</span>
</span><span class='line'><span class="sh">nor comprehend passion from intuition</span>
</span><span class='line'><span class="sh">and requires an explanation</span>
</span><span class='line'><span class="sh">\n\t\twhere there is none.</span>
</span><span class='line'>
</span><span class='line'><span class="no">MULTI_LINE_STRING</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--------------&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">poem</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--------------&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">five</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">3</span> <span class="o">-</span> <span class="mi">6</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;This should be five: </span><span class="si">#{</span><span class="n">five</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">secret_formula</span><span class="p">(</span><span class="n">started</span><span class="p">)</span>
</span><span class='line'>  <span class="n">jelly_beans</span> <span class="o">=</span> <span class="n">started</span> <span class="o">*</span> <span class="mi">500</span>
</span><span class='line'>  <span class="n">jars</span> <span class="o">=</span> <span class="n">jelly_beans</span> <span class="o">/</span> <span class="mi">1000</span>
</span><span class='line'>  <span class="n">crates</span> <span class="o">=</span> <span class="n">jars</span> <span class="o">/</span> <span class="mi">100</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">jelly_beans</span><span class="p">,</span> <span class="n">jars</span><span class="p">,</span> <span class="n">crates</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">start_point</span> <span class="o">=</span> <span class="mi">10000</span>
</span><span class='line'><span class="n">beans</span><span class="p">,</span> <span class="n">jars</span><span class="p">,</span> <span class="n">crates</span> <span class="o">=</span> <span class="n">secret_formula</span><span class="p">(</span><span class="n">start_point</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;With a starting point of: </span><span class="si">#{</span><span class="n">start_point</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We&#39;d have </span><span class="si">#{</span><span class="n">beans</span><span class="si">}</span><span class="s2"> beans, </span><span class="si">#{</span><span class="n">jars</span><span class="si">}</span><span class="s2"> jars, and </span><span class="si">#{</span><span class="n">crates</span><span class="si">}</span><span class="s2"> crates.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">start_point</span> <span class="o">=</span> <span class="n">start_point</span> <span class="o">/</span> <span class="mi">10</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We can also do that this way:&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We&#39;d have %s beans, %s jars, and %s crates.&quot;</span> <span class="o">%</span> <span class="n">secret_formula</span><span class="p">(</span><span class="n">start_point</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出</p>

<pre><code>Let's practice everything.
You'd need to know 'bout escapes with \ that do 
 newlines and    tabs.
--------------

    The lovely world
with logic so firmly planted
cannot discern 
 the needs of love
nor comprehend passion from intuition
and requires an explanation

        where there is none.

--------------
This should be five: 5
With a starting point of: 10000
We'd have 5000000 beans, 5000 jars, and 50 crates.
We can also do that this way:
We'd have 500000 beans, 500 jars, and 5 crates.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 23: 阅读一些代码]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex23/"/>
    <updated>2014-04-03T15:54:39+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex23</id>
    <content type="html"><![CDATA[<p>Delbert 会在本文中提供几个链接。</p>

<!--more-->


<ol>
<li><a href="//github.com" title="GitHub&quot;">github.com</a></li>
<li><a href="//gitcafe.com" title="大陆的 GitHub">gitcafe.com</a></li>
<li><a href="//oschina.net" title="Open Source China">oschina.net</a></li>
<li><a href="//ruby-china.org" title="Ruby China">ruby-china.org</a></li>
<li><a href="//www.google.com/ncr">Google.com</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 22: 目前为止你学到了什么]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex22/"/>
    <updated>2014-04-03T15:47:38+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex22</id>
    <content type="html"><![CDATA[<p>本节没有代码。点开原文也没有，加上这个只是为了看起来整齐。</p>

<!--more-->


<p>有还是没有？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 21: 函数可以返回一些东西]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex21/"/>
    <updated>2014-04-03T15:47:13+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex21</id>
    <content type="html"><![CDATA[<p>就是函数的返回值啦。不过本节还没有用到 <code>return</code> 关键字， Ruby 默认把函数最后一行作为返回值。</p>

<!--more-->




<figure class='code'><figcaption><span>ex21.rb</span><a href='//ruby.code.kekou.de/code/ex21.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;ADDING </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> + </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">subtract</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;SUBTRACTING </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> - </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">-</span> <span class="n">b</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">multiply</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;MULTIPLYING </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> * </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">*</span> <span class="n">b</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">divide</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;DIVIDING </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> / </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">/</span> <span class="n">b</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Let&#39;s do some math with just functions!&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="n">add</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="n">height</span> <span class="o">=</span> <span class="n">subtract</span><span class="p">(</span><span class="mi">78</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="n">weight</span> <span class="o">=</span> <span class="n">multiply</span><span class="p">(</span><span class="mi">90</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">iq</span> <span class="o">=</span> <span class="n">divide</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Age: </span><span class="si">#{</span><span class="n">age</span><span class="si">}</span><span class="s2">, Height: </span><span class="si">#{</span><span class="n">height</span><span class="si">}</span><span class="s2">, Weight: </span><span class="si">#{</span><span class="n">weight</span><span class="si">}</span><span class="s2">, IQ: </span><span class="si">#{</span><span class="n">iq</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># A puzzle for the extra credit, type it in anyway.</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Here is a puzzle.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">what</span> <span class="o">=</span> <span class="n">add</span><span class="p">(</span><span class="n">age</span><span class="p">,</span> <span class="n">subtract</span><span class="p">(</span><span class="n">height</span><span class="p">,</span> <span class="n">multiply</span><span class="p">(</span><span class="n">weight</span><span class="p">,</span> <span class="n">divide</span><span class="p">(</span><span class="n">iq</span><span class="p">,</span> <span class="mi">2</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;That becomes: </span><span class="si">#{</span><span class="n">what</span><span class="si">}</span><span class="s2"> Can you do it by hand?&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出为</p>

<pre><code>Let's do some math with just functions!
ADDING 30 + 5
SUBTRACTING 78 - 4
MULTIPLYING 90 * 2
DIVIDING 100 / 2
Age: 35, Height: 74, Weight: 180, IQ: 50
Here is a puzzle.
DIVIDING 50 / 2
MULTIPLYING 180 * 25
SUBTRACTING 74 - 4500
ADDING 35 + -4426
That becomes: -4391 Can you do it by hand?
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 20: 函数和文件]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex20/"/>
    <updated>2014-04-03T14:54:15+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex20</id>
    <content type="html"><![CDATA[<p>这一节是写了用来操作文件的函数，包括输出指定行，从头输出等方法。</p>

<!--more-->




<figure class='code'><figcaption><span>ex20.rb</span><a href='//ruby.code.kekou.de/code/ex20.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">input_file</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">print_all</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">rewind</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
</span><span class='line'>  <span class="n">f</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="ss">IO</span><span class="p">:</span><span class="ss">:SEEK_SET</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">print_a_line</span><span class="p">(</span><span class="n">line_count</span><span class="p">,</span> <span class="n">f</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">line_count</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">current_file</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">input_file</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;First let&#39;s print the whole file:&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="c1"># a blank line</span>
</span><span class='line'>
</span><span class='line'><span class="n">print_all</span><span class="p">(</span><span class="n">current_file</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Now let&#39;s rewind, kind of like a tape.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">rewind</span><span class="p">(</span><span class="n">current_file</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Let&#39;s print three lines:&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">current_line</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="n">print_a_line</span><span class="p">(</span><span class="n">current_line</span><span class="p">,</span> <span class="n">current_file</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">current_line</span> <span class="o">=</span> <span class="n">current_line</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="n">print_a_line</span><span class="p">(</span><span class="n">current_line</span><span class="p">,</span> <span class="n">current_file</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">current_line</span> <span class="o">=</span> <span class="n">current_line</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'><span class="n">print_a_line</span><span class="p">(</span><span class="n">current_line</span><span class="p">,</span> <span class="n">current_file</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行后输出：</p>

<pre><code>$ruby ex20.rb ex16_sample.txt
First let's print the whole file:

Line One.
Line Two.
Line Three.
Now let's rewind, kind of like a tape.
Let's print three lines:
1 Line One.
2 Line Two.
3 Line Three.
</code></pre>

<p>注释直接写在<a href="//ruby.code.kekou.de/code/ex20.rb" title="源码">源码</a>里面了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 19: 函数和变量]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex19/"/>
    <updated>2014-04-03T14:29:29+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex19</id>
    <content type="html"><![CDATA[<p>这一节涉及到函数和变量，准确来说是形参和实参的关系。简单来说，怎样给参数赋值不影响函数的表达。</p>

<!--more-->




<figure class='code'><figcaption><span>ex19.rb</span><a href='//ruby.code.kekou.de/code/ex19.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">cheese_and_crackers</span><span class="p">(</span><span class="n">cheese_count</span><span class="p">,</span> <span class="n">boxes_of_crackers</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You have </span><span class="si">#{</span><span class="n">cheese_count</span><span class="si">}</span><span class="s2"> cheeses!&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You have </span><span class="si">#{</span><span class="n">boxes_of_crackers</span><span class="si">}</span><span class="s2"> boxes of crackers!&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Man that&#39;s enough for a party!&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Get a blanket.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="c1"># a blank line</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We can just give the function numbers directly:&quot;</span>
</span><span class='line'><span class="n">cheese_and_crackers</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;OR, we can use variables from our script:&quot;</span>
</span><span class='line'><span class="n">amount_of_cheese</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="n">amount_of_crackers</span> <span class="o">=</span> <span class="mi">50</span>
</span><span class='line'><span class="n">cheese_and_crackers</span><span class="p">(</span><span class="n">amount_of_cheese</span><span class="p">,</span> <span class="n">amount_of_crackers</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We can even do math inside too:&quot;</span>
</span><span class='line'><span class="n">cheese_and_crackers</span><span class="p">(</span><span class="mi">10</span> <span class="o">+</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">5</span> <span class="o">+</span> <span class="mi">6</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;And we can combine the two, variables and math:&quot;</span>
</span><span class='line'><span class="n">cheese_and_crackers</span><span class="p">(</span><span class="n">amount_of_cheese</span> <span class="o">+</span> <span class="mi">100</span><span class="p">,</span> <span class="n">amount_of_crackers</span> <span class="o">+</span> <span class="mi">1000</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出</p>

<pre><code>$ruby ex19.rb
We can just give the function numbers directly:
You have 20 cheeses!
You have 30 boxes of crackers!
Man that's enough for a party!
Get a blanket.

OR, we can use variables from our script:
You have 10 cheeses!
You have 50 boxes of crackers!
Man that's enough for a party!
Get a blanket.

We can even do math inside too:
You have 30 cheeses!
You have 11 boxes of crackers!
Man that's enough for a party!
Get a blanket.

And we can combine the two, variables and math:
You have 110 cheeses!
You have 1050 boxes of crackers!
Man that's enough for a party!
Get a blanket.

$
</code></pre>

<p>繁体版最后少加了一个空行。对应<a href="//ruby.code.kekou.de/code/ex19.rb" title="源码">源码</a>就能知道是怎么执行的了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 18: 命名、变量、代码、函数]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex18/"/>
    <updated>2014-04-03T12:00:04+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex18</id>
    <content type="html"><![CDATA[<p>这一节要接触函数了，用 <code>def</code> 关键字和 Python 真是像呢。话说，真的是松本看不惯 Python 才写的 Ruby 么？</p>

<!--more-->




<figure class='code'><figcaption><span>ex18.rb</span><a href='//ruby.code.kekou.de/code/ex18.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># this one is like your scripts with argv</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_two</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>  <span class="n">arg1</span><span class="p">,</span> <span class="n">arg2</span> <span class="o">=</span> <span class="n">args</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;arg1: </span><span class="si">#{</span><span class="n">arg1</span><span class="si">}</span><span class="s2">, arg2: </span><span class="si">#{</span><span class="n">arg2</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ok, that *args is actually pointless, we can just do this</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_two_again</span><span class="p">(</span><span class="n">arg1</span><span class="p">,</span> <span class="n">arg2</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;arg1: </span><span class="si">#{</span><span class="n">arg1</span><span class="si">}</span><span class="s2">, arg2: </span><span class="si">#{</span><span class="n">arg2</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># this just takes one argument</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_one</span><span class="p">(</span><span class="n">arg1</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;arg1: </span><span class="si">#{</span><span class="n">arg1</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># this one takes no arguments</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_none</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;I got nothin&#39;.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">puts_two</span><span class="p">(</span><span class="s2">&quot;Zed&quot;</span><span class="p">,</span><span class="s2">&quot;Shaw&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">puts_two_again</span><span class="p">(</span><span class="s2">&quot;Zed&quot;</span><span class="p">,</span><span class="s2">&quot;Shaw&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">puts_one</span><span class="p">(</span><span class="s2">&quot;First!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">puts_none</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>定义了四个函数，第一个是用指针方式指定了参数个数，剩余三个则是指定了有限个参数个数。最后调用执行这四个函数。</p>

<ol>
<li>函数定义是以 <code>def</code> 开始的；</li>
<li>Ruby 的规范是以小写字符和 <code>_</code> 下划线来进行连接；</li>
<li>函数名后紧接左括号；</li>
<li>多个参数时应用英文逗号隔开；</li>
<li>参数结束后要用英文右括号结束；</li>
<li>函数体要进行缩进两个空格(Delbert 自己更习惯用一个 Tab)；</li>
<li>与相应的 <code>def</code> 对齐的地方要有 <code>end</code> 来完成函数。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 17: 更多文件操作]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex17/"/>
    <updated>2014-04-03T09:45:55+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex17</id>
    <content type="html"><![CDATA[<p>本节进行文件内容的复制。</p>

<!--more-->




<figure class='code'><figcaption><span>ex17.rb</span><a href='//ruby.code.kekou.de/code/ex17.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">from_file</span><span class="p">,</span> <span class="n">to_file</span> <span class="o">=</span> <span class="no">ARGV</span>
</span><span class='line'><span class="n">script</span> <span class="o">=</span> <span class="vg">$0</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Copying from </span><span class="si">#{</span><span class="n">from_file</span><span class="si">}</span><span class="s2"> to </span><span class="si">#{</span><span class="n">to_file</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># we could do these two on one line too, how?</span>
</span><span class='line'><span class="n">input</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">from_file</span><span class="p">)</span>
</span><span class='line'><span class="n">indata</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'><span class="c1"># input = File.open(from_file).read() </span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;The input file is </span><span class="si">#{</span><span class="n">indata</span><span class="o">.</span><span class="n">length</span><span class="si">}</span><span class="s2"> bytes long&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Does the output file exist? </span><span class="si">#{</span><span class="no">File</span><span class="o">.</span><span class="n">exists?</span> <span class="n">to_file</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Ready, hit RETURN to continue, CTRL-C to abort.&quot;</span>
</span><span class='line'><span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span>
</span><span class='line'>
</span><span class='line'><span class="n">output</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">to_file</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">output</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">indata</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Alright, all done.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">output</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'><span class="n">input</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行该文件的时候需要两个参数，输入文件和输出文件。</p>

<p>我使用了上一节的文本</p>

<pre><code>$ruby ex17.rb ex16_sample.txt ex17_sample.txt
Copying from ex16_sample.txt to ex17_sample.txt
The input file is 31 bytes long
Does the output file exist? false
Ready, hit RETURN to continue, CTRL-C to abort.

Alright, all done.
</code></pre>

<p>你可以用 Linux 下的 <code>cat</code> 命令，我也可以用 Windows 下的 <code>COPY</code> 命令来完成复制。</p>

<p>如果没有 <code>close()</code> 是不会保存文件的吧。</p>

<p>至于改写程序，我是这样改写的，最后只用一行完成，测试执行可用。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">ARGV</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 16: 读写文件]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex16/"/>
    <updated>2014-04-03T09:45:48+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex16</id>
    <content type="html"><![CDATA[<p>继续文件的读写。本节代码如下：</p>

<!--more-->




<figure class='code'><figcaption><span>ex16.rb</span><a href='//ruby.code.kekou.de/code/ex16.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">filename</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="c1">#script = $0</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We&#39;re going to erase </span><span class="si">#{</span><span class="n">filename</span><span class="si">}</span><span class="s2">.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;If you don&#39;t want that, hit CTRL-C (^C).&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;If you do want that, hit RETURN.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">print</span> <span class="s2">&quot;? &quot;</span>
</span><span class='line'><span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Opening the file...&quot;</span>
</span><span class='line'><span class="n">target</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Truncating the file.  Goodbye!&quot;</span>
</span><span class='line'><span class="n">target</span><span class="o">.</span><span class="n">truncate</span><span class="p">(</span><span class="n">target</span><span class="o">.</span><span class="n">size</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Now I&#39;m going to ask you for three lines.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">print</span> <span class="s2">&quot;line 1: &quot;</span><span class="p">;</span> <span class="n">line1</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'><span class="nb">print</span> <span class="s2">&quot;line 2: &quot;</span><span class="p">;</span> <span class="n">line2</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'><span class="nb">print</span> <span class="s2">&quot;line 3: &quot;</span><span class="p">;</span> <span class="n">line3</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;I&#39;m going to write these to the file.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#target.write(line1)</span>
</span><span class='line'><span class="c1">#target.write(&quot;\n&quot;)</span>
</span><span class='line'><span class="c1">#target.write(line2)</span>
</span><span class='line'><span class="c1">#target.write(&quot;\n&quot;)</span>
</span><span class='line'><span class="c1">#target.write(line3)</span>
</span><span class='line'><span class="c1">#target.write(&quot;\n&quot;)</span>
</span><span class='line'>
</span><span class='line'><span class="n">contents</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">line1</span><span class="si">}</span><span class="se">\n</span><span class="si">#{</span><span class="n">line2</span><span class="si">}</span><span class="se">\n</span><span class="si">#{</span><span class="n">line3</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="n">target</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">contents</span><span class="p">)</span> <span class="c1"># Write the contents with one target.write()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;And finally, we close it.&quot;</span>
</span><span class='line'><span class="n">target</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行命令</p>

<pre><code>$ruby ex16.rb ex16_sample.txt
We're going to erase ex16_sample.txt.
If you don't want that, hit CTRL-C (^C).
If you do want that, hit RETURN.
?
Opening the file...
Truncating the file.  Goodbye!
Now I'm going to ask you for three lines.
line 1: Line One.
line 2: Line Two.
line 3: Line Three.
I'm going to write these to the file.
And finally, we close it.

$cat ex16_sample.txt // replace "cat" with "type" if you use Windows
Line One.
Line Two.
Line Three.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 15: 读取文件]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex15/"/>
    <updated>2014-04-03T09:15:30+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex15</id>
    <content type="html"><![CDATA[<p>从一个文本文件中读取内容，并显示在屏幕上。</p>

<!--more-->




<figure class='code'><figcaption><span>ex15_sample.txt</span><a href='//ruby.code.kekou.de/code/ex15_sample.txt'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>This is stuff I typed into a file.
</span><span class='line'>It is really cool stuff.
</span><span class='line'>Lots and lots of fun to have in here.
</span></code></pre></td></tr></table></div></figure>


<p>程序片段如下</p>

<figure class='code'><figcaption><span>ex15.rb</span><a href='//ruby.code.kekou.de/code/ex15.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">filename</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">first</span>    <span class="c1"># get the first argument.</span>
</span><span class='line'>
</span><span class='line'><span class="n">prompt</span> <span class="o">=</span> <span class="s2">&quot;&gt; &quot;</span>  <span class="c1"># as the sign of tip</span>
</span><span class='line'><span class="n">txt</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>    <span class="c1"># open the file #{filename}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Here&#39;s your file: </span><span class="si">#{</span><span class="n">filename</span><span class="si">}</span><span class="s2">&quot;</span> <span class="c1"># print the #{filename} with a line feed</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">txt</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>   <span class="c1"># print the contents out</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Type the filename again:&quot;</span> <span class="c1"># input the name of the file</span>
</span><span class='line'><span class="nb">print</span> <span class="n">prompt</span>   <span class="c1"># sign of the input tip</span>
</span><span class='line'><span class="n">file_again</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>  <span class="c1"># get the filename without a line feed</span>
</span><span class='line'>
</span><span class='line'><span class="n">txt_again</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">file_again</span><span class="p">)</span>    <span class="c1"># get the contents</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">txt_again</span><span class="o">.</span><span class="n">read</span><span class="p">()</span> <span class="c1"># and print it out</span>
</span></code></pre></td></tr></table></div></figure>


<p>命令提示符中输出如下：</p>

<pre><code>$ruby ex15.rb ex15_sample.txt
Here's your file: ex15_sample.txt
This is stuff I typed into a file.
It is really cool stuff.
Lots and lots of fun to have in here.
Type the filename again:
&gt; ex15_sample.txt
This is stuff I typed into a file.
It is really cool stuff.
Lots and lots of fun to have in here.
</code></pre>

<p>删掉使用 <code>STDIN.gets</code> 的部分后，提示：</p>

<pre><code>$ruby ex15.rb ex15_sample.txt
Here's your file: ex15_sample.txt
This is stuff I typed into a file.
It is really cool stuff.
Lots and lots of fun to have in here.
Type the filename again:
&gt; ex15.rb:13:in `&lt;main&gt;': undefined local variable or method `file_again' for ma
in:Object (NameError)
</code></pre>

<p>也就是说并不是编译后再执行， Ruby 是一种运行时的语言。</p>

<p>PowerShell 中是有 <code>cat</code> 命令的， CMD 命令行中没有。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 14: 提示和传递]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex14/"/>
    <updated>2014-04-02T22:31:29+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex14</id>
    <content type="html"><![CDATA[<p>感觉标题怪怪的，又感觉看到 <code>prompt</code> 不像是 ruby ，倒像是 JavaScript 了呢。</p>

<!--more-->




<figure class='code'><figcaption><span>ex14.rb</span><a href='//ruby.code.kekou.de/code/ex14.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="n">prompt</span> <span class="o">=</span> <span class="s1">&#39;&gt; &#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hi </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">, I&#39;m the </span><span class="si">#{</span><span class="vg">$0</span><span class="si">}</span><span class="s2"> script.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;I&#39;d like to ask you a few questions.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Do you like me </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">?&quot;</span>
</span><span class='line'><span class="nb">print</span> <span class="n">prompt</span>
</span><span class='line'><span class="n">likes</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Where do you live </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">?&quot;</span>
</span><span class='line'><span class="nb">print</span> <span class="n">prompt</span>
</span><span class='line'><span class="n">lives</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;What kind of computer do you have?&quot;</span>
</span><span class='line'><span class="nb">print</span> <span class="n">prompt</span>
</span><span class='line'><span class="n">computer</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="o">&lt;&lt;</span><span class="no">MESSAGE</span>
</span><span class='line'><span class="sh">Alright, so you said #{likes} about liking me.</span>
</span><span class='line'><span class="sh">You live in #{lives}.  Not sure where that is.</span>
</span><span class='line'><span class="sh">And you have a #{computer} computer.  Nice.</span>
</span><span class='line'><span class="no">MESSAGE</span>
</span></code></pre></td></tr></table></div></figure>


<p>交互式输出，因为使用 <code>&gt;</code> 作为输入提示符，所以其后是我所输入的内容：</p>

<pre><code>$ruby ex14.rb Delbert
Hi Delbert, I'm the ex14.rb script.
I'd like to ask you a few questions.
Do you like me Delbert?
&gt; Yes
Where do you live Delbert?
&gt; Wuhan/Jinan
What kind of computer do you have?
&gt; ASUS A41I and MacBook Air
Alright, so you said Yes about liking me.
You live in Wuhan/Jinan.  Not sure where that is.
And you have a ASUS A41I and MacBook Air computer.  Nice.
</code></pre>

<p>先通过 <code>#{user}</code> 获取 <code>ARGV</code> 的第一个参数，并使用变量替换。使用<code>文件语法</code>输入的时候也可以进行替换。用 <code>STDIN</code> 是因为 <code>gets.chomp</code> 默认会取程序而不是后面的参数。</p>

<p>使用变量的好处就是可以只替换其初始化的地方就可以完成整个的替换。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 13: 参数、解包、变量]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex13/"/>
    <updated>2014-04-02T21:10:45+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex13</id>
    <content type="html"><![CDATA[<p>不知道 lrthw 繁体版是什么原因，<em>参数</em>两个汉字写了一遍简体，一遍繁体。</p>

<!--more-->


<blockquote><p>Update: 看了一下英文原版，原文是 “Parameters, Unpacking, Variables”，估计是翻译的时候一时走神了吧，但是他已经不再维护这个 repo 了啊……</p></blockquote>

<figure class='code'><figcaption><span>ex13.rb</span><a href='//ruby.code.kekou.de/code/ex13.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">first</span><span class="p">,</span> <span class="n">second</span><span class="p">,</span> <span class="n">third</span> <span class="o">=</span> <span class="no">ARGV</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;The script is called: </span><span class="si">#{</span><span class="vg">$0</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Your first variable is: </span><span class="si">#{</span><span class="n">first</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Your second variable is: </span><span class="si">#{</span><span class="n">second</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Your third variable is: </span><span class="si">#{</span><span class="n">third</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>其实有 <code>C++</code> 的基础的话，很好理解的。和 <code>int argc, char** argv</code> 里面的 <code>argv</code> 是一个道理，理解了参数就好。第 0 个参数是程序/脚本本身。</p>

<p>什么都不写，直接运行的话，输出：</p>

<pre><code>The script is called: ex13.rb
Your first variable is: 
Your second variable is: 
Your third variable is:
</code></pre>
]]></content>
  </entry>
  
</feed>
