<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Notes for Ruby]]></title>
  <link href="http://ruby.code.kekou.de//atom.xml" rel="self"/>
  <link href="http://ruby.code.kekou.de//"/>
  <updated>2014-04-07T21:28:54+08:00</updated>
  <id>http://ruby.code.kekou.de//</id>
  <author>
    <name><![CDATA[Delbert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ex 50: 你的第一个网站]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex50/"/>
    <updated>2014-04-07T20:45:44+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex50</id>
    <content type="html"><![CDATA[<p>好吧，对 Delbert 而言，应该不是第一个了……</p>

<!--more-->


<h3>安装 Sinatra</h3>

<p>在命令行中输入 <code>fem install sinatra</code>:</p>

<pre><code>$ gem install sinatra
Fetching: sinatra-1.4.4.gem (100%)
Successfully installed sinatra-1.4.4
1 gem installed
Installing ri documentation for sinatra-1.4.4...
Installing RDoc documentation for sinatra-1.4.4...
</code></pre>

<h3>写一个简单的 Hello World 项目</h3>

<pre><code>E:\SourceCode\ruby\projects&gt; bundle gem gothonweb
      create  gothonweb/Gemfile
      create  gothonweb/Rakefile
      create  gothonweb/LICENSE.txt
      create  gothonweb/README.md
      create  gothonweb/.gitignore
      create  gothonweb/gothonweb.gemspec
      create  gothonweb/lib/gothonweb.rb
      create  gothonweb/lib/gothonweb/version.rb
Initializing git repo in E:/SourceCode/ruby/projects/gothonweb
warning: LF will be replaced by CRLF in .gitignore.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Gemfile.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in LICENSE.txt.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in README.md.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Rakefile.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in gothonweb.gemspec.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in lib/gothonweb.rb.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in lib/gothonweb/version.rb.
The file will have its original line endings in your working directory.
</code></pre>

<p>直接运行 <code>ruby lib/gothonweb.rb</code> 会得到下面的错误：</p>

<pre><code>lib/gothonweb.rb:5:in `&lt;module:Gothonweb&gt;': undefined method `get' for Gothonweb
:Module (NoMethodError)
        from lib/gothonweb.rb:4:in `&lt;main&gt;'
</code></pre>

<p>根据 SOF <a href="http://stackoverflow.com/questions/16645762/exercise-50-http-ruby-learncodethehardway-org-book-ex50-html-error-while-r">http://stackoverflow.com/questions/16645762/exercise-50-http-ruby-learncodethehardway-org-book-ex50-html-error-while-r</a> 这个来看，是 Sinatra 的版本高了。要么安装低版本的，要么将 <code>Module</code> 注释掉。</p>

<p>剩下的就是解释具体是怎样执行的了。</p>

<p>Update: Sinatra 官网的示例程序是这样的：</p>

<figure class='code'><figcaption><span>Example</span><a href='http://www.sinatrarb.com/intro.html'>Official Site</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># myapp.rb</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="s1">&#39;Hello world!&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 49: 创造句子]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex49/"/>
    <updated>2014-04-07T20:05:59+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex49</id>
    <content type="html"><![CDATA[<p>按照自己的理解解释一下程序吧。</p>

<!--more-->


<p>Match and Peek 里面的 <code>peek</code> 获取第一个单词的 token。不过， token 是什么东西啊？(从后文看，应该是和 symbol 相关的)<code>match</code> 从单词 list 当中取出第一个，如果是所期望的，返回；如果不是，直接抛弃。<code>skip</code> 调用上述两个方法，若是所期望的则返回，若不是则跳过。</p>

<p>这样的话，后面的程序就会输出为最开始的样子了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 48: 高级用户输入]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex48/"/>
    <updated>2014-04-07T18:55:14+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex48</id>
    <content type="html"><![CDATA[<p>有点类似模糊输入的意思。用户的多种输入实际上对应同样的操作。</p>

<!--more-->


<p><strong>分词</strong>： 用 <code>split</code> 方法。</p>

<p><strong>组合</strong>： 用 Ruby 的 struct 结构。目前还不是很清楚。</p>

<p><strong>数字</strong>： 用 <code>Integer</code> 方法。</p>

<p><strong>异常</strong>： 用 <code>begin/rescue</code> ，类似 C++ 里面的 <code>try/catch</code>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 47: 自动化测试]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex47/"/>
    <updated>2014-04-07T18:28:35+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex47</id>
    <content type="html"><![CDATA[<p>在上一节的基础上开始测试。</p>

<!--more-->


<p>这一节繁体中文版在表述上有多处错误：</p>

<ol>
<li>原版的 <strong>Writing A Test Case</strong> 中 “First” 一行，路径是 <code>ex47/test/test_ex47.rb</code>，繁体中文版本则变成了 <code>tests/ex47_tests.rb</code>。</li>
<li>英文原版中创建的文件是 <code>ex47/lib/ex47.rb</code>，到了繁体中文版本则变成了 <code>ex47/lib/game.rb</code> 了。</li>
<li>在 <strong>Testing Guidelines</strong> 中， <code>test</code> 和 <code>tests</code> 傻傻分不清。其实繁体中文版中，整篇文章这两个单词就从来没有分清楚过……</li>
</ol>


<p>按照英文原版的说明来调试，才会跑出正确的结果。</p>

<p>另外，<code>ex47.gemspec</code> 我放不放到路径当中，放到哪个路径当中，对整个测试没有一点儿影响，那么，这个文件是干嘛用的？</p>

<p>只要继承了 <code>Test::Unit::TestCase</code>，就会出现类似 C++ 中编译器编译的效果。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 46: 建立一个项目框架]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex46/"/>
    <updated>2014-04-06T22:24:42+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex46</id>
    <content type="html"><![CDATA[<p>很明显，这一节中所有的内容都是在 *nix 系统下完成的。不过， Windows 系统的 PowerShell 命令应该也可以胜任。不行的话还是架设虚拟机吧。</p>

<!--more-->


<p>按照说明将这一节完成下来了，但是 Windows 下的 <code>mkdir</code> 命令只能一个一个去建立目录，而不能一次建立多个。</p>

<p>前面所有的步骤都完成了，但是在哪里开始编程？</p>

<p>小测验的问题不会做……</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 45: 对象、类和继承关系]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex45/"/>
    <updated>2014-04-06T21:46:18+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex45</id>
    <content type="html"><![CDATA[<p>本节讲到了类与对象， is-a 和 has-a 的关系。</p>

<!--more-->


<p>is-a 是这样的：狗<strong>是一种</strong>动物。</p>

<p>has-a 是这样的： 狗<strong>有一个</strong>名字。</p>

<p>所以，类与类的关系是 is-a，类与其中的成员的关系是 has-a。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Line 6: is-a
</span><span class='line'>Line 10: has-a
</span><span class='line'>Line 16: is-a
</span><span class='line'>Line 20: has-a
</span><span class='line'>Line 26: is-a
</span><span class='line'>Line 32: has-a
</span><span class='line'>Line 40: is-a
</span><span class='line'>Line 44: has-a
</span><span class='line'>Line 46: has-a
</span><span class='line'>Line 52: is-a
</span><span class='line'>Line 57: is-a
</span><span class='line'>Line 62: is-a
</span><span class='line'>Line 70: is-a
</span><span class='line'>Line 73: is-a
</span><span class='line'>Line 76: has-a
</span><span class='line'>Line 79: is-a
</span><span class='line'>Line 82: has-a
</span><span class='line'>Line 85: is-a
</span><span class='line'>Line 88: is-a
</span><span class='line'>Line 91: is-a
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 44: 评估你的游戏]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex44/"/>
    <updated>2014-04-06T21:41:21+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex44</id>
    <content type="html"><![CDATA[<p>评估你的游戏只是本节最后一部分内容，前面说了编程风格和养成良好变成习惯的问题。</p>

<!--more-->


<p>虽然不想写注释，但是如果不写注释的话，真的是会很快忘记你这段代码的作用的，除非是 <code>1+1=2</code> 这种的。</p>

<p>我看 Bullet 的代码，注释真是不多，最起码对我而言是不多，最开始的时候我都不知道应该如何下手。后来还是用 Doxygen 生成了 manual ，虽然还是有很多问题，但还是聊胜于无吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 43: 你来制作一个游戏]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex43/"/>
    <updated>2014-04-06T21:39:20+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex43</id>
    <content type="html"><![CDATA[<p>略。</p>

<!--more-->


<p>我有拖延症，待会儿再说。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 42: 物以类聚]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex42/"/>
    <updated>2014-04-06T21:20:04+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex42</id>
    <content type="html"><![CDATA[<p>本节提到了类的概念，代码太长，懒得粘贴了。</p>

<!--more-->


<p>Ruby 的实例变量是以 <code>@</code> 开头，只对单个对象可见。不管在类的什么地方定义，用的都是同一个。初始化对象函数 <code>initialize</code> 函数可以类比成 C++ 里面的构造函数。</p>

<p>通过 <code>attr_*</code> 来设置实例变量能否被外界读取写入。</p>

<p>类以 <code>Class 类名</code> 开头，对应 <code>end</code> 结束，类的继承用 <code>&lt;</code> 符号。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 41: 来自 Percal 25 号行星的哥顿人(Gothons)]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex41/"/>
    <updated>2014-04-06T17:48:05+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex41</id>
    <content type="html"><![CDATA[<p>这一节我连标题都看不懂好不好……</p>

<!--more-->


<p>本节开始的两行代码我能看懂，但是解释却把我给解释头都大了。<code>method</code> 是一种预先规定好的返回某个特定值的方法，但是繁体中文翻译为“内建”，很无语。</p>

<p>下面这一段看起来挺多，大部分都是输出：</p>

<figure class='code'><figcaption><span>ex41.rb</span><a href='//ruby.code.kekou.de/code/ex41.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">prompt</span><span class="p">()</span>   <span class="c1"># sign of input tips</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;&gt; &quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">death</span><span class="p">()</span> <span class="c1"># game over and output one of the listed sentenses</span>
</span><span class='line'>  <span class="n">quips</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;You died.  You kinda suck at this.&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;Nice job, you died ...jackass.&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;Such a luser.&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;I have a small puppy that&#39;s better at this.&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">quips</span><span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="n">quips</span><span class="o">.</span><span class="n">length</span><span class="p">())</span><span class="o">]</span>
</span><span class='line'>  <span class="no">Process</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">central_corridor</span><span class="p">()</span>  <span class="c1"># input your choice after the prompt sign and generate a key</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;The Gothons of Planet Percal #25 have invaded your ship and destroyed&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;your entire crew.  You are the last surviving member and your last&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;mission is to get the neutron destruct bomb from the Weapons Armory,&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;put it in the bridge, and blow the ship up after getting into an &quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;escape pod.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You&#39;re running down the central corridor to the Weapons Armory when&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;a Gothon jumps out, red scaly skin, dark grimy teeth, and evil clown costume&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;flowing around his hate filled body.  He&#39;s blocking the door to the&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Armory and about to pull a weapon to blast you.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">()</span>
</span><span class='line'>  <span class="n">action</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;shoot!&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Quick on the draw you yank out your blaster and fire it at the Gothon.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;His clown costume is flowing and moving around his body, which throws&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;off your aim.  Your laser hits his costume but misses him entirely.  This&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;completely ruins his brand new costume his mother bought him, which&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;makes him fly into an insane rage and blast you repeatedly in the face until&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;you are dead.  Then he eats you.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;dodge!&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Like a world class boxer you dodge, weave, slip and slide right&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;as the Gothon&#39;s blaster cranks a laser past your head.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;In the middle of your artful dodge your foot slips and you&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;bang your head on the metal wall and pass out.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You wake up shortly after only to die as the Gothon stomps on&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;your head and eats you.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;tell a joke&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Lucky for you they made you learn Gothon insults in the academy.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You tell the one Gothon joke you know:&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Lbhe zbgure vf fb sng, jura fur fvgf nebhaq gur ubhfr, fur fvgf nebhaq gur ubhfr.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The Gothon stops, tries not to laugh, then busts out laughing and can&#39;t move.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;While he&#39;s laughing you run up and shoot him square in the head&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;putting him down, then jump through the Weapon Armory door.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:laser_weapon_armory</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;DOES NOT COMPUTE!&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:central_corridor</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">laser_weapon_armory</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You do a dive roll into the Weapon Armory, crouch and scan the room&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;for more Gothons that might be hiding.  It&#39;s dead quiet, too quiet.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You stand up and run to the far side of the room and find the&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;neutron bomb in its container.  There&#39;s a keypad lock on the box&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;and you need the code to get the bomb out.  If you get the code&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;wrong 10 times then the lock closes forever and you can&#39;t&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;get the bomb.  The code is 3 digits.&quot;</span>
</span><span class='line'>  <span class="n">code</span> <span class="o">=</span> <span class="s2">&quot;%s%s%s&quot;</span> <span class="o">%</span> <span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;[keypad]&gt; &quot;</span>
</span><span class='line'>  <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>  <span class="n">guesses</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span> <span class="n">guess</span> <span class="o">!=</span> <span class="n">code</span> <span class="ow">and</span> <span class="n">guesses</span> <span class="o">&lt;</span> <span class="mi">10</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;BZZZZEDDD!&quot;</span>
</span><span class='line'>    <span class="n">guesses</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="nb">print</span> <span class="s2">&quot;[keypad]&gt; &quot;</span>
</span><span class='line'>    <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">guess</span> <span class="o">==</span> <span class="n">code</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The container clicks open and the seal breaks, letting gas out.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You grab the neutron bomb and run as fast as you can to the&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;bridge where you must place it in the right spot.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:the_bridge</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The lock buzzes one last time and then you hear a sickening&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;melting sound as the mechanism is fused together.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You decide to sit there, and finally the Gothons blow up the&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;ship from their ship and you die.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">the_bridge</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You burst onto the Bridge with the netron destruct bomb&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;under your arm and surprise 5 Gothons who are trying to&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;take control of the ship.  Each of them has an even uglier&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;clown costume than the last.  They haven&#39;t pulled their&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;weapons out yet, as they see the active bomb under your&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;arm and don&#39;t want to set it off.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">()</span>
</span><span class='line'>  <span class="n">action</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;throw the bomb&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;In a panic you throw the bomb at the group of Gothons&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;and make a leap for the door.  Right as you drop it a&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Gothon shoots you right in the back killing you.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;As you die you see another Gothon frantically try to disarm&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;the bomb. You die knowing they will probably blow up when&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;it goes off.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">&quot;slowly place the bomb&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You point your blaster at the bomb under your arm&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;and the Gothons put their hands up and start to sweat.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You inch backward to the door, open it, and then carefully&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;place the bomb on the floor, pointing your blaster at it.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You then jump back through the door, punch the close button&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;and blast the lock so the Gothons can&#39;t get out.&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Now that the bomb is placed you run to the escape pod to&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;get off this tin can.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:escape_pod</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;DOES NOT COMPUTE!&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:the_bridge</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">escape_pod</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You rush through the ship desperately trying to make it to&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;the escape pod before the whole ship explodes.  It seems like&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;hardly any Gothons are on the ship, so your run is clear of&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;interference.  You get to the chamber with the escape pods, and&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;now need to pick one to take.  Some of them could be damaged&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;but you don&#39;t have time to look.  There&#39;s 5 pods, which one&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;do you take?&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">good_pod</span> <span class="o">=</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;[pod #]&gt;&quot;</span>
</span><span class='line'>  <span class="n">guess</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">guess</span><span class="o">.</span><span class="n">to_i</span> <span class="o">!=</span> <span class="n">good_pod</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You jump into pod %s and hit the eject button.&quot;</span> <span class="o">%</span> <span class="n">guess</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The pod escapes out into the void of space, then&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;implodes as the hull ruptures, crushing your body&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;into jam jelly.&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="ss">:death</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You jump into pod %s and hit the eject button.&quot;</span> <span class="o">%</span> <span class="n">guess</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The pod easily slides out into space heading to&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;the planet below.  As it flies to the planet, you look&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;back and see your ship implode then explode like a&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;bright star, taking out the Gothon ship at the same&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;time.  You won!&quot;</span>
</span><span class='line'>    <span class="no">Process</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">ROOMS</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">:death</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:death</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:central_corridor</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:central_corridor</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:laser_weapon_armory</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:laser_weapon_armory</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:the_bridge</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:the_bridge</span><span class="p">),</span>
</span><span class='line'>  <span class="ss">:escape_pod</span> <span class="o">=&gt;</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:escape_pod</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">runner</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">start</span><span class="p">)</span>
</span><span class='line'>  <span class="n">next_one</span> <span class="o">=</span> <span class="n">start</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">room</span> <span class="o">=</span> <span class="n">map</span><span class="o">[</span><span class="n">next_one</span><span class="o">]</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">--------&quot;</span>
</span><span class='line'>    <span class="n">next_one</span> <span class="o">=</span> <span class="n">room</span><span class="o">.</span><span class="n">call</span><span class="p">()</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">runner</span><span class="p">(</span><span class="no">ROOMS</span><span class="p">,</span> <span class="ss">:central_corridor</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>搜了一下，以 <code>:</code> 开头的 symbol 对象。最长应的是作为哈希表的 key。虽然明白代码是执行了 <code>runner()</code> 中的 <code>next_one = room.call()</code> 语句，但是却始终没找到 <code>method</code> 相关的说明。 <code>[]</code> 中的是 key，函数是从 <code>ROOMS[:central_corridor]</code> 开始执行，但是 <code>call</code> 和 <code>method</code> 到底是有怎样的关联呢？</p>

<p>根据上一节的代码：</p>

<pre><code>cities[:find] = method(:find_city)
</code></pre>

<p>可以这样认为，<code>method</code> 去查找后面 symbol 对应的方法来执行。 <code>call</code> 前面是对应 symbol 的方法，<code>call</code> 的括号内是该方法的参数。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 40: hash,可爱的 hash]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex40/"/>
    <updated>2014-04-06T16:52:13+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex40</id>
    <content type="html"><![CDATA[<p>Ruby 的 hash 是一种 key-value 类型的容器，可以通过 key 的值来索引到对应的 value。 Hash 是没有顺序的，不能通过 index 来得到对应的 value。 Hash 现在简体中文一般翻译为<strong>哈希</strong>。</p>

<!--more-->


<p>可以直接在 irb 中这样定义一个数组：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :015 &gt; things = [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]</span>
</span><span class='line'><span class="go"> =&gt; [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :016 &gt; print things[1]</span>
</span><span class='line'><span class="go">b =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :017 &gt; things[1] = &#39;z&#39;</span>
</span><span class='line'><span class="go"> =&gt; &quot;z&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :018 &gt; print things[1]</span>
</span><span class='line'><span class="go">z =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :019 &gt; print things</span>
</span><span class='line'><span class="go">[&quot;a&quot;, &quot;z&quot;, &quot;c&quot;, &quot;d&quot;] =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>实际上，数组相当于用数字来当 key 的 hash。当将数字替换为其他的东西之后，就变成了这样：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :001 &gt; stuff = {:name =&gt; &quot;Rob&quot;, :age =&gt; 30, :height =&gt; 5*12+10}</span>
</span><span class='line'><span class="go"> =&gt; {:name=&gt;&quot;Rob&quot;, :age=&gt;30, :height=&gt;70}</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :002 &gt; puts stuff[:name]</span>
</span><span class='line'><span class="go">Rob</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :003 &gt; puts stuff[:age]</span>
</span><span class='line'><span class="go">30</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :004 &gt; puts stuff[:height]</span>
</span><span class='line'><span class="go">70</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :005 &gt; stuff[:city] = &quot;New York&quot;</span>
</span><span class='line'><span class="go"> =&gt; &quot;New York&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :006 &gt; puts stuff[:city]</span>
</span><span class='line'><span class="go">New York</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>当明确指明了对应的 k-w 之后，数字便不再是索引(index)，而变成了 key，例如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :004 &gt; stuff[1] = &quot;Wow&quot;</span>
</span><span class='line'><span class="go"> =&gt; &quot;Wow&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :005 &gt; stuff[2] = &quot;Neato&quot;</span>
</span><span class='line'><span class="go"> =&gt; &quot;Neato&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :006 &gt; puts stuff[1]</span>
</span><span class='line'><span class="go">Wow</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :007 &gt; puts stuff[2]</span>
</span><span class='line'><span class="go">Neato</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :008 &gt; puts stuff</span>
</span><span class='line'><span class="go">{:name=&gt;&quot;Rob&quot;, :age=&gt;30, :height=&gt;70, :city=&gt;&quot;New York&quot;, 1=&gt;&quot;Wow&quot;, 2=&gt;&quot;Neato&quot;}</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>删除其中的元素也是通过调用 key 来实现的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :009 &gt; stuff.delete(:city)</span>
</span><span class='line'><span class="go"> =&gt; &quot;New York&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :010 &gt; stuff.delete(1)</span>
</span><span class='line'><span class="go"> =&gt; &quot;Wow&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :011 &gt; stuff.delete(2)</span>
</span><span class='line'><span class="go"> =&gt; &quot;Neato&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :012 &gt; stuff</span>
</span><span class='line'><span class="go"> =&gt; {:name=&gt;&quot;Rob&quot;, :age=&gt;30, :height=&gt;70}</span>
</span></code></pre></td></tr></table></div></figure>


<p>下面是通过 key 来查询对应州的名字的一段代码，我们完全可以自己写一个通过区号查地区的程序(好像工作量有点大)：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cities</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;CA&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;San Francisco&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;MI&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Detroit&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;FL&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Jacksonville&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="s1">&#39;NY&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;New York&#39;</span>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="s1">&#39;OR&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;Portland&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">find_city</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">state</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">map</span><span class="o">.</span><span class="n">include?</span> <span class="n">state</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">map</span><span class="o">[</span><span class="n">state</span><span class="o">]</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">return</span> <span class="s2">&quot;Not found.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ok pay attention!</span>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="ss">:find</span><span class="o">]</span> <span class="o">=</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:find_city</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="kp">true</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;State? (ENTER to quit) &quot;</span>
</span><span class='line'>  <span class="n">state</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">break</span> <span class="k">if</span> <span class="n">state</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># this line is the most important ever! study!</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">cities</span><span class="o">[</span><span class="ss">:find</span><span class="o">].</span><span class="n">call</span><span class="p">(</span><span class="n">cities</span><span class="p">,</span> <span class="n">state</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 39: 数组的操作]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex39/"/>
    <updated>2014-04-06T16:07:11+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex39</id>
    <content type="html"><![CDATA[<p>本文说了一些数组的操作。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ten_things</span> <span class="o">=</span> <span class="s2">&quot;Apples Oranges Crows Telephone Light Sugar&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Wait there&#39;s not 10 things in that list, let&#39;s fix that.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">stuff</span> <span class="o">=</span> <span class="n">ten_things</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">more_stuff</span> <span class="o">=</span> <span class="sx">%w(Day Night Song Frisbee Corn Banana Girl Boy)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">stuff</span><span class="o">.</span><span class="n">length</span> <span class="o">!=</span> <span class="mi">10</span>
</span><span class='line'>  <span class="n">next_one</span> <span class="o">=</span> <span class="n">more_stuff</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Adding: </span><span class="si">#{</span><span class="n">next_one</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">stuff</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">next_one</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;There&#39;s </span><span class="si">#{</span><span class="n">stuff</span><span class="o">.</span><span class="n">length</span><span class="si">}</span><span class="s2"> items now.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;There we go: </span><span class="si">#{</span><span class="n">stuff</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Let&#39;s do some things with stuff.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">[-</span><span class="mi">1</span><span class="o">]</span> <span class="c1"># whoa! fancy</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span> <span class="c1"># what? cool!</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">values_at</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;#&#39;</span><span class="p">)</span> <span class="c1"># super stellar!</span>
</span></code></pre></td></tr></table></div></figure>


<p>用到了 <code>split</code> <code>pop</code> <code>join</code> 等方法。</p>

<ul>
<li><code>split</code>: 一个最基本的字符串操作是把一个字符串分割成多个子字符串。</li>
<li><code>pop</code>: 返回数组最后一个元素并删除。</li>
<li><code>shift</code>: 返回数组第一个元素并删除，剩余元素依次提前。</li>
<li><code>join</code>: 连接数组的元素。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 38: 阅读代码]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex38/"/>
    <updated>2014-04-06T16:05:24+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex38</id>
    <content type="html"><![CDATA[<p>和第 23 节的工作差不多，仍然是阅读代码。</p>

<!--more-->


<p>不过这个阅读代码要尝试自己加上注释，尝试运行，尝试画出程序的流程图。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 37: 复习各种符号。]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex37/"/>
    <updated>2014-04-06T15:55:43+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex37</id>
    <content type="html"><![CDATA[<p>本节列出了 Ruby 的关键字，操作法等，可以自行复习或查阅资料了解。</p>

<!--more-->


<h3>关键字</h3>

<ul>
<li><code>alias</code></li>
<li><code>and</code></li>
<li><code>BEGIN</code></li>
<li><code>begin</code></li>
<li><code>break</code></li>
<li><code>case</code></li>
<li><code>class</code></li>
<li><code>def</code></li>
<li><code>defined?</code></li>
<li><code>do</code></li>
<li><code>else</code></li>
<li><code>elsif</code></li>
<li><code>END</code></li>
<li><code>end</code></li>
<li><code>ensure</code></li>
<li><code>false</code></li>
<li><code>for</code></li>
<li><code>if</code></li>
<li><code>in</code></li>
<li><code>module</code></li>
<li><code>next</code></li>
<li><code>nil</code></li>
<li><code>not</code></li>
<li><code>or</code></li>
<li><code>redo</code></li>
<li><code>rescue</code></li>
<li><code>retry</code></li>
<li><code>return</code></li>
<li><code>self</code></li>
<li><code>super</code></li>
<li><code>then</code></li>
<li><code>true</code></li>
<li><code>undef</code></li>
<li><code>unless</code></li>
<li><code>until</code></li>
<li><code>when</code></li>
<li><code>while</code></li>
<li><code>yield</code></li>
</ul>


<h3>数据类型</h3>

<ul>
<li><code>true</code></li>
<li><code>false</code></li>
<li><code>nil</code></li>
<li><code>constants</code></li>
<li><code>strings</code></li>
<li><code>numbers</code></li>
<li><code>ranges</code></li>
<li><code>arrays</code></li>
<li><code>hashes</code></li>
</ul>


<h3>转义符</h3>

<ul>
<li><code>\\</code></li>
<li><code>\'</code></li>
<li><code>\"</code></li>
<li><code>\a</code></li>
<li><code>\b</code></li>
<li><code>\f</code></li>
<li><code>\n</code></li>
<li><code>\r</code></li>
<li><code>\t</code></li>
<li><code>\v</code></li>
</ul>


<h3>操作符</h3>

<ul>
<li><code>::</code></li>
<li><code>[]</code></li>
<li><code>**</code></li>
<li><code>-(unary)</code></li>
<li><code>+(unary)</code></li>
<li><code>!</code></li>
<li><code>~</code></li>
<li><code>*</code></li>
<li><code>/</code></li>
<li><code>%</code></li>
<li><code>+</code></li>
<li><code>-</code></li>
<li><code>&lt;&lt;</code></li>
<li><code>&gt;&gt;</code></li>
<li><code>&amp;</code></li>
<li><code>|</code></li>
<li><code>&gt;</code></li>
<li><code>&gt;=</code></li>
<li><code>&lt;</code></li>
<li><code>&lt;=</code></li>
<li><code>&lt;=&gt;</code></li>
<li><code>==</code></li>
<li><code>===</code></li>
<li><code>!=</code></li>
<li><code>=~</code></li>
<li><code>!~</code></li>
<li><code>&amp;&amp;</code></li>
<li><code>||</code></li>
<li><code>..</code></li>
<li><code>...</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 36: 设计和测试]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex36/"/>
    <updated>2014-04-06T15:47:03+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex36</id>
    <content type="html"><![CDATA[<p>本节写了一些设计和测试需要注意的地方，其他语言也应该同样注意。</p>

<!--more-->


<p>算是触类旁通吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 35: 分支(branches)和函数(functions)]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex35/"/>
    <updated>2014-04-06T15:31:17+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex35</id>
    <content type="html"><![CDATA[<p>本节是前面几个练习的综合。</p>

<!--more-->


<p>另：<code>to_i</code> 是 Ruby 中将字符串转换为数值的方法，该方法可以忽略数字以外的东西。 <code>Interger()</code> 的功能类似，但是如果输入数字以外的东西，则会报错。</p>

<p>以下来自 <a href="http://ruby-china.org/topics/1227">Ruby-China</a></p>

<blockquote><p>Interger:</p></blockquote>

<pre><code>1.9.3p0 :011 &gt; Integer("123")
 =&gt; 123 
1.9.3p0 :012 &gt; Integer("123hello")
ArgumentError: invalid value for Integer(): "123hello"
</code></pre>

<blockquote><p>to_i</p></blockquote>

<pre><code>1.9.2p290 :006 &gt; "123t".to_i
 =&gt; 123 
1.9.2p290 :007 &gt; "t".to_i
 =&gt; 0 
1.9.2p290 :008 &gt; "".to_i
 =&gt; 0 
1.9.2p290 :009 &gt; nil.to_i
 =&gt; 0 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 34: 存取数组内元素]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex34/"/>
    <updated>2014-04-06T15:25:58+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex34</id>
    <content type="html"><![CDATA[<p>这一节主要讲了下标/索引(index)的概念。</p>

<!--more-->


<p>基本所有的程序语言的索引都是从 0 开始的，和人类的自然语言有所出入，使用的时候要注意。</p>

<p>Ruby 还提供了 first 和 last 等方便的方法，但是不经常使用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 33: while循环]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex33/"/>
    <updated>2014-04-06T14:38:27+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex33</id>
    <content type="html"><![CDATA[<p>本节讲的是 <code>while</code> 循环。<code>while</code> 循环只要后面的条件为真就会一直循环，直到条件改变为假时才会停止。因此，如果不小心将后面的条件设置为永远为真，将会陷入死循环。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">numbers</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;At the top i is </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">numbers</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Numbers now: </span><span class="si">#{</span><span class="n">numbers</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;At the bottom i is </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;The numbers: &quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">num</span> <span class="k">in</span> <span class="n">numbers</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">num</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>就是这样，喵~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 32: 循环和数组]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex32/"/>
    <updated>2014-04-06T14:13:32+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex32</id>
    <content type="html"><![CDATA[<p><code>array</code> 被翻译为<strong>阵列</strong>感觉怪怪的，但是简体中文里面的<strong>数组</strong>貌似也好不到什么地方去。</p>

<!--more-->




<figure class='code'><figcaption><span>数组</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">the_count</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span>
</span><span class='line'><span class="n">fruits</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;apples&#39;</span><span class="p">,</span> <span class="s1">&#39;oranges&#39;</span><span class="p">,</span> <span class="s1">&#39;pears&#39;</span><span class="p">,</span> <span class="s1">&#39;apricots&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">change</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;pennies&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;dimes&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;quarters&#39;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>数组是用方括号 <code>[]</code> 括起来，中间用逗号间隔的。</p>

<p>本节的循环是 <code>for</code> 循环。</p>

<figure class='code'><figcaption><span>ex32.rb</span><a href='//ruby.code.kekou.de/code/ex32.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">the_count</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span>
</span><span class='line'><span class="n">fruits</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;apples&#39;</span><span class="p">,</span> <span class="s1">&#39;oranges&#39;</span><span class="p">,</span> <span class="s1">&#39;pears&#39;</span><span class="p">,</span> <span class="s1">&#39;apricots&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">change</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;pennies&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;dimes&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;quarters&#39;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># this first kind of for-loop goes through an array</span>
</span><span class='line'><span class="k">for</span> <span class="n">number</span> <span class="k">in</span> <span class="n">the_count</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;This is count </span><span class="si">#{</span><span class="n">number</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># same as above, but using a block instead</span>
</span><span class='line'><span class="n">fruits</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">fruit</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;A fruit of type: </span><span class="si">#{</span><span class="n">fruit</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># also we can go through mixed arrays too</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">change</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;I got </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># we can also build arrays, first start with an empty one</span>
</span><span class='line'><span class="n">elements</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># then use a range object to do 0 to 5 counts</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Adding </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2"> to the list.&quot;</span>
</span><span class='line'>  <span class="c1"># push is a function that arrays understand</span>
</span><span class='line'>  <span class="n">elements</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># now we can puts them out too</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">elements</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Element was: </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意符号范围符 <code>..</code> 和 <code>...</code> 的区别：前者包含对象的范围终点，而后者不包含。</p>

<pre><code>elements = (0..5) # assign `(0..5)` directly to `elements`
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 31: 做出决定]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex31/"/>
    <updated>2014-04-06T14:06:10+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex31</id>
    <content type="html"><![CDATA[<p>之前的函数都是 <code>顺序结构</code>，有 <code>if/else</code> 的是<code>分支结构</code>，剩下的一种是<code>循环结构</code>。所有的程序都是由这三种结构派生演变出来的。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">prompt</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;&gt; &quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;You enter a dark room with two doors.  Do you go through door #1 or door #2?&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">prompt</span><span class="p">;</span> <span class="n">door</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">door</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;There&#39;s a giant bear here eating a cheese cake.  What do you do?&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;1. Take the cake.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;2. Scream at the bear.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">;</span> <span class="n">bear</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">bear</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The bear eats your face off.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">bear</span> <span class="o">==</span> <span class="s2">&quot;2&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The bear eats your legs off.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Well, doing </span><span class="si">#{</span><span class="n">bear</span><span class="si">}</span><span class="s2"> is probably better.  Bear runs away.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">elsif</span> <span class="n">door</span> <span class="o">==</span> <span class="s2">&quot;2&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You stare into the endless abyss at Cthuhlu&#39;s retina.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;1. Blueberries.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;2. Yellow jacket clothespins.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;3. Understanding revolvers yelling melodies.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">;</span> <span class="n">insanity</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">insanity</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span> <span class="ow">or</span> <span class="n">insanity</span> <span class="o">==</span> <span class="s2">&quot;2&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Your body survives powered by a mind of jello.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The insanity rots your eyes into a pool of muck.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You stumble around and fall on a knife and die.  Good job!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>判断用户所输入的，根据用户的输入来选择不同的分支。</p>

<p>写在一行中的程序用 <code>;</code> 间隔，但是行末没有分号感觉好别扭啊。</p>
]]></content>
  </entry>
  
</feed>
