<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Notes for Ruby]]></title>
  <link href="http://ruby.code.kekou.de//atom.xml" rel="self"/>
  <link href="http://ruby.code.kekou.de//"/>
  <updated>2014-04-06T17:15:55+08:00</updated>
  <id>http://ruby.code.kekou.de//</id>
  <author>
    <name><![CDATA[Delbert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ex 40: hash,可爱的 hash]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex40/"/>
    <updated>2014-04-06T16:52:13+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex40</id>
    <content type="html"><![CDATA[<p>Ruby 的 hash 是一种 key-value 类型的容器，可以通过 key 的值来索引到对应的 value。 Hash 是没有顺序的，不能通过 index 来得到对应的 value。 Hash 现在简体中文一般翻译为<strong>哈希</strong>。</p>

<!--more-->


<p>可以直接在 irb 中这样定义一个数组：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :015 &gt; things = [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]</span>
</span><span class='line'><span class="go"> =&gt; [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :016 &gt; print things[1]</span>
</span><span class='line'><span class="go">b =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :017 &gt; things[1] = &#39;z&#39;</span>
</span><span class='line'><span class="go"> =&gt; &quot;z&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :018 &gt; print things[1]</span>
</span><span class='line'><span class="go">z =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :019 &gt; print things</span>
</span><span class='line'><span class="go">[&quot;a&quot;, &quot;z&quot;, &quot;c&quot;, &quot;d&quot;] =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>实际上，数组相当于用数字来当 key 的 hash。当将数字替换为其他的东西之后，就变成了这样：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :001 &gt; stuff = {:name =&gt; &quot;Rob&quot;, :age =&gt; 30, :height =&gt; 5*12+10}</span>
</span><span class='line'><span class="go"> =&gt; {:name=&gt;&quot;Rob&quot;, :age=&gt;30, :height=&gt;70}</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :002 &gt; puts stuff[:name]</span>
</span><span class='line'><span class="go">Rob</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :003 &gt; puts stuff[:age]</span>
</span><span class='line'><span class="go">30</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :004 &gt; puts stuff[:height]</span>
</span><span class='line'><span class="go">70</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :005 &gt; stuff[:city] = &quot;New York&quot;</span>
</span><span class='line'><span class="go"> =&gt; &quot;New York&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :006 &gt; puts stuff[:city]</span>
</span><span class='line'><span class="go">New York</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>当明确指明了对应的 k-w 之后，数字便不再是索引(index)，而变成了 key，例如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :004 &gt; stuff[1] = &quot;Wow&quot;</span>
</span><span class='line'><span class="go"> =&gt; &quot;Wow&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :005 &gt; stuff[2] = &quot;Neato&quot;</span>
</span><span class='line'><span class="go"> =&gt; &quot;Neato&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :006 &gt; puts stuff[1]</span>
</span><span class='line'><span class="go">Wow</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :007 &gt; puts stuff[2]</span>
</span><span class='line'><span class="go">Neato</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :008 &gt; puts stuff</span>
</span><span class='line'><span class="go">{:name=&gt;&quot;Rob&quot;, :age=&gt;30, :height=&gt;70, :city=&gt;&quot;New York&quot;, 1=&gt;&quot;Wow&quot;, 2=&gt;&quot;Neato&quot;}</span>
</span><span class='line'><span class="go"> =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<p>删除其中的元素也是通过调用 key 来实现的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='irb'><span class='line'><span class="go">ruby-1.9.2-p180 :009 &gt; stuff.delete(:city)</span>
</span><span class='line'><span class="go"> =&gt; &quot;New York&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :010 &gt; stuff.delete(1)</span>
</span><span class='line'><span class="go"> =&gt; &quot;Wow&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :011 &gt; stuff.delete(2)</span>
</span><span class='line'><span class="go"> =&gt; &quot;Neato&quot;</span>
</span><span class='line'><span class="go">ruby-1.9.2-p180 :012 &gt; stuff</span>
</span><span class='line'><span class="go"> =&gt; {:name=&gt;&quot;Rob&quot;, :age=&gt;30, :height=&gt;70}</span>
</span></code></pre></td></tr></table></div></figure>


<p>下面是通过 key 来查询对应州的名字的一段代码，我们完全可以自己写一个通过区号查地区的程序(好像工作量有点大)：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cities</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;CA&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;San Francisco&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;MI&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Detroit&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;FL&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Jacksonville&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="s1">&#39;NY&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;New York&#39;</span>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="s1">&#39;OR&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;Portland&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">find_city</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">state</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">map</span><span class="o">.</span><span class="n">include?</span> <span class="n">state</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">map</span><span class="o">[</span><span class="n">state</span><span class="o">]</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">return</span> <span class="s2">&quot;Not found.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ok pay attention!</span>
</span><span class='line'><span class="n">cities</span><span class="o">[</span><span class="ss">:find</span><span class="o">]</span> <span class="o">=</span> <span class="nb">method</span><span class="p">(</span><span class="ss">:find_city</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="kp">true</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;State? (ENTER to quit) &quot;</span>
</span><span class='line'>  <span class="n">state</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">break</span> <span class="k">if</span> <span class="n">state</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># this line is the most important ever! study!</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">cities</span><span class="o">[</span><span class="ss">:find</span><span class="o">].</span><span class="n">call</span><span class="p">(</span><span class="n">cities</span><span class="p">,</span> <span class="n">state</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 39: 数组的操作]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex39/"/>
    <updated>2014-04-06T16:07:11+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex39</id>
    <content type="html"><![CDATA[<p>本文说了一些数组的操作。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ten_things</span> <span class="o">=</span> <span class="s2">&quot;Apples Oranges Crows Telephone Light Sugar&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Wait there&#39;s not 10 things in that list, let&#39;s fix that.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">stuff</span> <span class="o">=</span> <span class="n">ten_things</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">more_stuff</span> <span class="o">=</span> <span class="sx">%w(Day Night Song Frisbee Corn Banana Girl Boy)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">stuff</span><span class="o">.</span><span class="n">length</span> <span class="o">!=</span> <span class="mi">10</span>
</span><span class='line'>  <span class="n">next_one</span> <span class="o">=</span> <span class="n">more_stuff</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Adding: </span><span class="si">#{</span><span class="n">next_one</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">stuff</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">next_one</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;There&#39;s </span><span class="si">#{</span><span class="n">stuff</span><span class="o">.</span><span class="n">length</span><span class="si">}</span><span class="s2"> items now.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;There we go: </span><span class="si">#{</span><span class="n">stuff</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Let&#39;s do some things with stuff.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">[-</span><span class="mi">1</span><span class="o">]</span> <span class="c1"># whoa! fancy</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span> <span class="c1"># what? cool!</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">stuff</span><span class="o">.</span><span class="n">values_at</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;#&#39;</span><span class="p">)</span> <span class="c1"># super stellar!</span>
</span></code></pre></td></tr></table></div></figure>


<p>用到了 <code>split</code> <code>pop</code> <code>join</code> 等方法。</p>

<ul>
<li><code>split</code>: 一个最基本的字符串操作是把一个字符串分割成多个子字符串。</li>
<li><code>pop</code>: 返回数组最后一个元素并删除。</li>
<li><code>shift</code>: 返回数组第一个元素并删除，剩余元素依次提前。</li>
<li><code>join</code>: 连接数组的元素。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 38: 阅读代码]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex38/"/>
    <updated>2014-04-06T16:05:24+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex38</id>
    <content type="html"><![CDATA[<p>和第 23 节的工作差不多，仍然是阅读代码。</p>

<!--more-->


<p>不过这个阅读代码要尝试自己加上注释，尝试运行，尝试画出程序的流程图。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 37: 复习各种符号。]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex37/"/>
    <updated>2014-04-06T15:55:43+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex37</id>
    <content type="html"><![CDATA[<p>本节列出了 Ruby 的关键字，操作法等，可以自行复习或查阅资料了解。</p>

<!--more-->


<h3>关键字</h3>

<ul>
<li><code>alias</code></li>
<li><code>and</code></li>
<li><code>BEGIN</code></li>
<li><code>begin</code></li>
<li><code>break</code></li>
<li><code>case</code></li>
<li><code>class</code></li>
<li><code>def</code></li>
<li><code>defined?</code></li>
<li><code>do</code></li>
<li><code>else</code></li>
<li><code>elsif</code></li>
<li><code>END</code></li>
<li><code>end</code></li>
<li><code>ensure</code></li>
<li><code>false</code></li>
<li><code>for</code></li>
<li><code>if</code></li>
<li><code>in</code></li>
<li><code>module</code></li>
<li><code>next</code></li>
<li><code>nil</code></li>
<li><code>not</code></li>
<li><code>or</code></li>
<li><code>redo</code></li>
<li><code>rescue</code></li>
<li><code>retry</code></li>
<li><code>return</code></li>
<li><code>self</code></li>
<li><code>super</code></li>
<li><code>then</code></li>
<li><code>true</code></li>
<li><code>undef</code></li>
<li><code>unless</code></li>
<li><code>until</code></li>
<li><code>when</code></li>
<li><code>while</code></li>
<li><code>yield</code></li>
</ul>


<h3>数据类型</h3>

<ul>
<li><code>true</code></li>
<li><code>false</code></li>
<li><code>nil</code></li>
<li><code>constants</code></li>
<li><code>strings</code></li>
<li><code>numbers</code></li>
<li><code>ranges</code></li>
<li><code>arrays</code></li>
<li><code>hashes</code></li>
</ul>


<h3>转义符</h3>

<ul>
<li><code>\\</code></li>
<li><code>\'</code></li>
<li><code>\"</code></li>
<li><code>\a</code></li>
<li><code>\b</code></li>
<li><code>\f</code></li>
<li><code>\n</code></li>
<li><code>\r</code></li>
<li><code>\t</code></li>
<li><code>\v</code></li>
</ul>


<h3>操作符</h3>

<ul>
<li><code>::</code></li>
<li><code>[]</code></li>
<li><code>**</code></li>
<li><code>-(unary)</code></li>
<li><code>+(unary)</code></li>
<li><code>!</code></li>
<li><code>~</code></li>
<li><code>*</code></li>
<li><code>/</code></li>
<li><code>%</code></li>
<li><code>+</code></li>
<li><code>-</code></li>
<li><code>&lt;&lt;</code></li>
<li><code>&gt;&gt;</code></li>
<li><code>&amp;</code></li>
<li><code>|</code></li>
<li><code>&gt;</code></li>
<li><code>&gt;=</code></li>
<li><code>&lt;</code></li>
<li><code>&lt;=</code></li>
<li><code>&lt;=&gt;</code></li>
<li><code>==</code></li>
<li><code>===</code></li>
<li><code>!=</code></li>
<li><code>=~</code></li>
<li><code>!~</code></li>
<li><code>&amp;&amp;</code></li>
<li><code>||</code></li>
<li><code>..</code></li>
<li><code>...</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 36: 设计和测试]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex36/"/>
    <updated>2014-04-06T15:47:03+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex36</id>
    <content type="html"><![CDATA[<p>本节写了一些设计和测试需要注意的地方，其他语言也应该同样注意。</p>

<!--more-->


<p>算是触类旁通吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 35: 分支(branches)和函数(functions)]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex35/"/>
    <updated>2014-04-06T15:31:17+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex35</id>
    <content type="html"><![CDATA[<p>本节是前面几个练习的综合。</p>

<!--more-->


<p>另：<code>to_i</code> 是 Ruby 中将字符串转换为数值的方法，该方法可以忽略数字以外的东西。 <code>Interger()</code> 的功能类似，但是如果输入数字以外的东西，则会报错。</p>

<p>以下来自 <a href="http://ruby-china.org/topics/1227">Ruby-China</a></p>

<blockquote><p>Interger:</p></blockquote>

<pre><code>1.9.3p0 :011 &gt; Integer("123")
 =&gt; 123 
1.9.3p0 :012 &gt; Integer("123hello")
ArgumentError: invalid value for Integer(): "123hello"
</code></pre>

<blockquote><p>to_i</p></blockquote>

<pre><code>1.9.2p290 :006 &gt; "123t".to_i
 =&gt; 123 
1.9.2p290 :007 &gt; "t".to_i
 =&gt; 0 
1.9.2p290 :008 &gt; "".to_i
 =&gt; 0 
1.9.2p290 :009 &gt; nil.to_i
 =&gt; 0 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 34: 存取数组内元素]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex34/"/>
    <updated>2014-04-06T15:25:58+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex34</id>
    <content type="html"><![CDATA[<p>这一节主要讲了下标/索引(index)的概念。</p>

<!--more-->


<p>基本所有的程序语言的索引都是从 0 开始的，和人类的自然语言有所出入，使用的时候要注意。</p>

<p>Ruby 还提供了 first 和 last 等方便的方法，但是不经常使用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 33: while循环]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex33/"/>
    <updated>2014-04-06T14:38:27+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex33</id>
    <content type="html"><![CDATA[<p>本节讲的是 <code>while</code> 循环。<code>while</code> 循环只要后面的条件为真就会一直循环，直到条件改变为假时才会停止。因此，如果不小心将后面的条件设置为永远为真，将会陷入死循环。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="n">numbers</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;At the top i is </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">numbers</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Numbers now: </span><span class="si">#{</span><span class="n">numbers</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;At the bottom i is </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;The numbers: &quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">num</span> <span class="k">in</span> <span class="n">numbers</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">num</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>就是这样，喵~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 32: 循环和数组]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex32/"/>
    <updated>2014-04-06T14:13:32+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex32</id>
    <content type="html"><![CDATA[<p><code>array</code> 被翻译为<strong>阵列</strong>感觉怪怪的，但是简体中文里面的<strong>数组</strong>貌似也好不到什么地方去。</p>

<!--more-->




<figure class='code'><figcaption><span>数组</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">the_count</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span>
</span><span class='line'><span class="n">fruits</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;apples&#39;</span><span class="p">,</span> <span class="s1">&#39;oranges&#39;</span><span class="p">,</span> <span class="s1">&#39;pears&#39;</span><span class="p">,</span> <span class="s1">&#39;apricots&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">change</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;pennies&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;dimes&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;quarters&#39;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>数组是用方括号 <code>[]</code> 括起来，中间用逗号间隔的。</p>

<p>本节的循环是 <code>for</code> 循环。</p>

<figure class='code'><figcaption><span>ex32.rb</span><a href='//ruby.code.kekou.de/code/ex32.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">the_count</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span>
</span><span class='line'><span class="n">fruits</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;apples&#39;</span><span class="p">,</span> <span class="s1">&#39;oranges&#39;</span><span class="p">,</span> <span class="s1">&#39;pears&#39;</span><span class="p">,</span> <span class="s1">&#39;apricots&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">change</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;pennies&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;dimes&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;quarters&#39;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># this first kind of for-loop goes through an array</span>
</span><span class='line'><span class="k">for</span> <span class="n">number</span> <span class="k">in</span> <span class="n">the_count</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;This is count </span><span class="si">#{</span><span class="n">number</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># same as above, but using a block instead</span>
</span><span class='line'><span class="n">fruits</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">fruit</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;A fruit of type: </span><span class="si">#{</span><span class="n">fruit</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># also we can go through mixed arrays too</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">change</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;I got </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># we can also build arrays, first start with an empty one</span>
</span><span class='line'><span class="n">elements</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># then use a range object to do 0 to 5 counts</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Adding </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2"> to the list.&quot;</span>
</span><span class='line'>  <span class="c1"># push is a function that arrays understand</span>
</span><span class='line'>  <span class="n">elements</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># now we can puts them out too</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">elements</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Element was: </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意符号范围符 <code>..</code> 和 <code>...</code> 的区别：前者包含对象的范围终点，而后者不包含。</p>

<pre><code>elements = (0..5) # assign `(0..5)` directly to `elements`
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 31: 做出决定]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex31/"/>
    <updated>2014-04-06T14:06:10+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex31</id>
    <content type="html"><![CDATA[<p>之前的函数都是 <code>顺序结构</code>，有 <code>if/else</code> 的是<code>分支结构</code>，剩下的一种是<code>循环结构</code>。所有的程序都是由这三种结构派生演变出来的。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">prompt</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;&gt; &quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;You enter a dark room with two doors.  Do you go through door #1 or door #2?&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">prompt</span><span class="p">;</span> <span class="n">door</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">door</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;There&#39;s a giant bear here eating a cheese cake.  What do you do?&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;1. Take the cake.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;2. Scream at the bear.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">;</span> <span class="n">bear</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">bear</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The bear eats your face off.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">bear</span> <span class="o">==</span> <span class="s2">&quot;2&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The bear eats your legs off.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Well, doing </span><span class="si">#{</span><span class="n">bear</span><span class="si">}</span><span class="s2"> is probably better.  Bear runs away.&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">elsif</span> <span class="n">door</span> <span class="o">==</span> <span class="s2">&quot;2&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You stare into the endless abyss at Cthuhlu&#39;s retina.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;1. Blueberries.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;2. Yellow jacket clothespins.&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;3. Understanding revolvers yelling melodies.&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">prompt</span><span class="p">;</span> <span class="n">insanity</span> <span class="o">=</span> <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">insanity</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span> <span class="ow">or</span> <span class="n">insanity</span> <span class="o">==</span> <span class="s2">&quot;2&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Your body survives powered by a mind of jello.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;The insanity rots your eyes into a pool of muck.  Good job!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;You stumble around and fall on a knife and die.  Good job!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>判断用户所输入的，根据用户的输入来选择不同的分支。</p>

<p>写在一行中的程序用 <code>;</code> 间隔，但是行末没有分号感觉好别扭啊。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 30: else 和 if]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex30/"/>
    <updated>2014-04-06T14:01:47+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex30</id>
    <content type="html"><![CDATA[<p>在上一节的基础上加上了 <code>else</code>，多了一个判断分支。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">people</span> <span class="o">=</span> <span class="mi">30</span>
</span><span class='line'><span class="n">cars</span> <span class="o">=</span> <span class="mi">40</span>
</span><span class='line'><span class="n">buses</span> <span class="o">=</span> <span class="mi">15</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">cars</span> <span class="o">&gt;</span> <span class="n">people</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;We should take the cars.&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">cars</span> <span class="o">&lt;</span> <span class="n">people</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;We should not take the cars.&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;We can&#39;t decide.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">buses</span> <span class="o">&gt;</span> <span class="n">cars</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;That&#39;s too many buses.&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">buses</span> <span class="o">&lt;</span> <span class="n">cars</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Maybe we could take the buses.&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;We still can&#39;t decide.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&gt;</span> <span class="n">buses</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Alright, let&#39;s just take the buses.&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Fine, let&#39;s stay home then.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>多了两个关键字：<code>elsif</code> 和 <code>else</code>。前者用于分支中还有判断的情况，后者用于最后一个分支，包含其他未被包含的所有情况。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 29: 如果(if)]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex29/"/>
    <updated>2014-04-06T13:56:24+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex29</id>
    <content type="html"><![CDATA[<p><code>if</code> 是最基本的条件判断语句，虽然在不同语言中形式不同但是作用和思想都是一样的。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">people</span> <span class="o">=</span> <span class="mi">20</span>
</span><span class='line'><span class="n">cats</span> <span class="o">=</span> <span class="mi">30</span>
</span><span class='line'><span class="n">dogs</span> <span class="o">=</span> <span class="mi">15</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&lt;</span> <span class="n">cats</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Too many cats! The world is doomed!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&gt;</span> <span class="n">cats</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Not many cats! The world is saved!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&lt;</span> <span class="n">dogs</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;The world is drooled on!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&gt;</span> <span class="n">dogs</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;The world is dry!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">dogs</span> <span class="o">+=</span> <span class="mi">5</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&gt;=</span> <span class="n">dogs</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;People are greater than or equal to dogs.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">&lt;=</span> <span class="n">dogs</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;People are less than or equal to dogs.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">people</span> <span class="o">==</span> <span class="n">dogs</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;People are dogs.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>就不写运行后的输出了。</p>

<p><code>if</code> 后面的条件为真，则执行与其对应的 <code>end</code> 之间的语句，否则直接跳过。注意 Ruby 是缩进两个空格，而且要严格执行缩进。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 28: 布尔值表达式练习]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex28/"/>
    <updated>2014-04-03T21:09:44+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex28</id>
    <content type="html"><![CDATA[<p>本节是用 IRB 进行交互练习。</p>

<!--more-->


<p>Delbert 建议到 Codecademy 上根据要求完成一些练习，以便加深印象。</p>

<p><a href="http://www.codecademy.com/tracks/ruby">http://www.codecademy.com/tracks/ruby</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 27: 记忆逻辑关系]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex27/"/>
    <updated>2014-04-03T21:09:38+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex27</id>
    <content type="html"><![CDATA[<p>这一节是<em>与</em>、<em>或</em>、<em>非</em>的关系，之前有过程序基础或数字电路基础的同学可以略过。</p>

<!--more-->


<p>稍微有点逻辑基础即可知道，但是这是以后编程的基础。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 26: 恭喜你，现在来考试啦！]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex26/"/>
    <updated>2014-04-03T19:59:14+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex26</id>
    <content type="html"><![CDATA[<p>从官网下载一个文本，将其修改正确能够运行。</p>

<!--more-->




<figure class='code'><figcaption><span>ex26.rb</span><a href='//ruby.code.kekou.de/code/ex26.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># This function will break up words for us.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">break_words</span><span class="p">(</span><span class="n">stuff</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">stuff</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">words</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Sorts the words.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">sort_words</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">sorted</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Prints the first word after popping it off.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">word</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="n">poop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">word</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Prints the last word after popping it off.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">word</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">word</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Takes in a full sentence and returns the sorted words.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">sort_sentence</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">break_words</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">sort_words</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Puts the first and last words of the sentence.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_first_and_last</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">break_words</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">puts_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">puts_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Sorts the words then prints the first and last one.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">puts_first_and_last_sorted</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">sort_sentence</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">puts_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">puts_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Let&#39;s practice everything.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s1">&#39;You\&#39;d need to know \&#39;bout escapes with \\ that do \n newlines and \t tabs.&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">poem</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="no">POEM</span>
</span><span class='line'><span class="sh">\tThe lovely world</span>
</span><span class='line'><span class="sh">with logic so firmly planted</span>
</span><span class='line'><span class="sh">cannot discern \n the needs of love</span>
</span><span class='line'><span class="sh">nor comprehend passion from intuition</span>
</span><span class='line'><span class="sh">and requires an explantion</span>
</span><span class='line'><span class="sh">\n\t\twhere there is none.</span>
</span><span class='line'><span class="no">POEM</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--------------&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">poem</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--------------&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">five</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">3</span> <span class="o">-</span> <span class="mi">5</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;This should be five: %s&quot;</span> <span class="o">%</span> <span class="n">five</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">secret_formula</span><span class="p">(</span><span class="n">started</span><span class="p">)</span>
</span><span class='line'>    <span class="n">jelly_beans</span> <span class="o">=</span> <span class="n">started</span> <span class="o">*</span> <span class="mi">500</span>
</span><span class='line'>    <span class="n">jars</span> <span class="o">=</span> <span class="n">jelly_beans</span> <span class="p">\</span> <span class="mi">1000</span>
</span><span class='line'>    <span class="n">crates</span> <span class="o">=</span> <span class="n">jars</span> <span class="o">/</span> <span class="mi">100</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">jelly_beans</span><span class="p">,</span> <span class="n">jars</span><span class="p">,</span> <span class="n">crates</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">start_point</span> <span class="o">=</span> <span class="mi">10000</span>
</span><span class='line'><span class="n">beans</span><span class="p">,</span> <span class="n">jars</span><span class="p">,</span> <span class="n">crates</span> <span class="o">==</span> <span class="n">secret_formula</span><span class="p">(</span><span class="n">start</span><span class="o">-</span><span class="n">point</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;With a starting point of: %d&quot;</span> <span class="o">%</span> <span class="n">start_point</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We&#39;d have %d jeans, %d jars, and %d crates.&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">beans</span><span class="p">,</span> <span class="n">jars</span><span class="p">,</span> <span class="n">crates</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">start_point</span> <span class="o">=</span> <span class="n">start_point</span> <span class="o">/</span> <span class="mi">10</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We can also do that this way:&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We&#39;d have %d beans, %d jars, and %d crabapples.&quot;</span> <span class="o">%</span> <span class="n">secret_formula</span><span class="p">(</span><span class="n">start_pont</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">sentence</span> <span class="o">=</span> <span class="s2">&quot;All god</span><span class="se">\t</span><span class="s2">things come to those who weight.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">words</span> <span class="o">=</span> <span class="n">ex25</span><span class="o">.</span><span class="n">break_words</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'><span class="n">sorted_words</span> <span class="o">=</span> <span class="n">ex25</span><span class="o">.</span><span class="n">sort_words</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">puts_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="n">puts_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'><span class="o">.</span><span class="n">puts_first_word</span><span class="p">(</span><span class="n">sorted_words</span><span class="p">)</span>
</span><span class='line'><span class="n">puts_last_word</span><span class="p">(</span><span class="n">sorted_words</span><span class="p">)</span>
</span><span class='line'><span class="n">sorted_words</span> <span class="o">=</span> <span class="n">ex25</span><span class="o">.</span><span class="n">sort_sentence</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'><span class="n">prin</span> <span class="n">sorted_words</span>
</span><span class='line'>
</span><span class='line'><span class="n">puts_irst_and_last</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">puts_first_a_last_sorted</span><span class="p">(</span><span class="n">senence</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>也就是上面这段代码了。</p>

<p>Delbert 将修改后的代码放在<a href="//ruby.code.kekou.de/code/ex26-correct.rb" title="修改后源码">这里</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 25: 更多更多的练习]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex25/"/>
    <updated>2014-04-03T19:37:49+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex25</id>
    <content type="html"><![CDATA[<p>本节的内容给封装成一个模块(Module)了，是可以调用的哦。</p>

<!--more-->




<figure class='code'><figcaption><span>ex25.rb</span><a href='//ruby.code.kekou.de/code/ex25.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Ex25</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">break_words</span><span class="p">(</span><span class="n">stuff</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># This function will break up words for us.</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">stuff</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">sort_words</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Sorts the words.</span>
</span><span class='line'>    <span class="n">words</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">print_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Prints the first word and shifts the others down by one.</span>
</span><span class='line'>    <span class="n">word</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="n">shift</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">word</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">print_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Prints the last word after popping it off the end.</span>
</span><span class='line'>    <span class="n">word</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">word</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">sort_sentence</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Takes in a full sentence and returns the sorted words.</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">break_words</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sort_words</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">print_first_and_last</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Prints the first and last words of the sentence.</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">break_words</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">print_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">print_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">print_first_and_last_sorted</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># Sorts the words then prints the first and last one.</span>
</span><span class='line'>    <span class="n">words</span> <span class="o">=</span> <span class="n">sort_sentence</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>
</span><span class='line'>    <span class="n">print_first_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">print_last_word</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意这里正常方式运行，是没有任何输出的。因为内部都是函数，却没有任何调用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 24: 更多练习]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex24/"/>
    <updated>2014-04-03T16:04:23+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex24</id>
    <content type="html"><![CDATA[<p>就是将之前的给综合起来了，这一节明确使用了 <code>return</code> 关键字。</p>

<!--more-->




<figure class='code'><figcaption><span>ex24.rb</span><a href='//ruby.code.kekou.de/code/ex24.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Let&#39;s practice everything.&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;You</span><span class="se">\&#39;</span><span class="s2">d need to know </span><span class="se">\&#39;</span><span class="s2">bout escapes with </span><span class="se">\\</span><span class="s2"> that do </span><span class="se">\n</span><span class="s2"> newlines and </span><span class="se">\t</span><span class="s2"> tabs.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">poem</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="no">MULTI_LINE_STRING</span>
</span><span class='line'>
</span><span class='line'><span class="sh">\tThe lovely world</span>
</span><span class='line'><span class="sh">with logic so firmly planted</span>
</span><span class='line'><span class="sh">cannot discern \n the needs of love</span>
</span><span class='line'><span class="sh">nor comprehend passion from intuition</span>
</span><span class='line'><span class="sh">and requires an explanation</span>
</span><span class='line'><span class="sh">\n\t\twhere there is none.</span>
</span><span class='line'>
</span><span class='line'><span class="no">MULTI_LINE_STRING</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--------------&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">poem</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;--------------&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">five</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">3</span> <span class="o">-</span> <span class="mi">6</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;This should be five: </span><span class="si">#{</span><span class="n">five</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">secret_formula</span><span class="p">(</span><span class="n">started</span><span class="p">)</span>
</span><span class='line'>  <span class="n">jelly_beans</span> <span class="o">=</span> <span class="n">started</span> <span class="o">*</span> <span class="mi">500</span>
</span><span class='line'>  <span class="n">jars</span> <span class="o">=</span> <span class="n">jelly_beans</span> <span class="o">/</span> <span class="mi">1000</span>
</span><span class='line'>  <span class="n">crates</span> <span class="o">=</span> <span class="n">jars</span> <span class="o">/</span> <span class="mi">100</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">jelly_beans</span><span class="p">,</span> <span class="n">jars</span><span class="p">,</span> <span class="n">crates</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">start_point</span> <span class="o">=</span> <span class="mi">10000</span>
</span><span class='line'><span class="n">beans</span><span class="p">,</span> <span class="n">jars</span><span class="p">,</span> <span class="n">crates</span> <span class="o">=</span> <span class="n">secret_formula</span><span class="p">(</span><span class="n">start_point</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;With a starting point of: </span><span class="si">#{</span><span class="n">start_point</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We&#39;d have </span><span class="si">#{</span><span class="n">beans</span><span class="si">}</span><span class="s2"> beans, </span><span class="si">#{</span><span class="n">jars</span><span class="si">}</span><span class="s2"> jars, and </span><span class="si">#{</span><span class="n">crates</span><span class="si">}</span><span class="s2"> crates.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">start_point</span> <span class="o">=</span> <span class="n">start_point</span> <span class="o">/</span> <span class="mi">10</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We can also do that this way:&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;We&#39;d have %s beans, %s jars, and %s crates.&quot;</span> <span class="o">%</span> <span class="n">secret_formula</span><span class="p">(</span><span class="n">start_point</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出</p>

<pre><code>Let's practice everything.
You'd need to know 'bout escapes with \ that do 
 newlines and    tabs.
--------------

    The lovely world
with logic so firmly planted
cannot discern 
 the needs of love
nor comprehend passion from intuition
and requires an explanation

        where there is none.

--------------
This should be five: 5
With a starting point of: 10000
We'd have 5000000 beans, 5000 jars, and 50 crates.
We can also do that this way:
We'd have 500000 beans, 500 jars, and 5 crates.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 23: 阅读一些代码]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex23/"/>
    <updated>2014-04-03T15:54:39+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex23</id>
    <content type="html"><![CDATA[<p>Delbert 会在本文中提供几个链接。</p>

<!--more-->


<ol>
<li><a href="//github.com" title="GitHub&quot;">github.com</a></li>
<li><a href="//gitcafe.com" title="大陆的 GitHub">gitcafe.com</a></li>
<li><a href="//oschina.net" title="Open Source China">oschina.net</a></li>
<li><a href="//ruby-china.org" title="Ruby China">ruby-china.org</a></li>
<li><a href="//www.google.com/ncr">Google.com</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 22: 目前为止你学到了什么]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex22/"/>
    <updated>2014-04-03T15:47:38+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex22</id>
    <content type="html"><![CDATA[<p>本节没有代码。点开原文也没有，加上这个只是为了看起来整齐。</p>

<!--more-->


<p>有还是没有？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ex 21: 函数可以返回一些东西]]></title>
    <link href="http://ruby.code.kekou.de//blog/ex21/"/>
    <updated>2014-04-03T15:47:13+08:00</updated>
    <id>http://ruby.code.kekou.de//blog/ex21</id>
    <content type="html"><![CDATA[<p>就是函数的返回值啦。不过本节还没有用到 <code>return</code> 关键字， Ruby 默认把函数最后一行作为返回值。</p>

<!--more-->




<figure class='code'><figcaption><span>ex21.rb</span><a href='//ruby.code.kekou.de/code/ex21.rb'>Download Code</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;ADDING </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> + </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">subtract</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;SUBTRACTING </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> - </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">-</span> <span class="n">b</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">multiply</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;MULTIPLYING </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> * </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">*</span> <span class="n">b</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">divide</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;DIVIDING </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2"> / </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">a</span> <span class="o">/</span> <span class="n">b</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Let&#39;s do some math with just functions!&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">age</span> <span class="o">=</span> <span class="n">add</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="n">height</span> <span class="o">=</span> <span class="n">subtract</span><span class="p">(</span><span class="mi">78</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="n">weight</span> <span class="o">=</span> <span class="n">multiply</span><span class="p">(</span><span class="mi">90</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">iq</span> <span class="o">=</span> <span class="n">divide</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Age: </span><span class="si">#{</span><span class="n">age</span><span class="si">}</span><span class="s2">, Height: </span><span class="si">#{</span><span class="n">height</span><span class="si">}</span><span class="s2">, Weight: </span><span class="si">#{</span><span class="n">weight</span><span class="si">}</span><span class="s2">, IQ: </span><span class="si">#{</span><span class="n">iq</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># A puzzle for the extra credit, type it in anyway.</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Here is a puzzle.&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">what</span> <span class="o">=</span> <span class="n">add</span><span class="p">(</span><span class="n">age</span><span class="p">,</span> <span class="n">subtract</span><span class="p">(</span><span class="n">height</span><span class="p">,</span> <span class="n">multiply</span><span class="p">(</span><span class="n">weight</span><span class="p">,</span> <span class="n">divide</span><span class="p">(</span><span class="n">iq</span><span class="p">,</span> <span class="mi">2</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;That becomes: </span><span class="si">#{</span><span class="n">what</span><span class="si">}</span><span class="s2"> Can you do it by hand?&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出为</p>

<pre><code>Let's do some math with just functions!
ADDING 30 + 5
SUBTRACTING 78 - 4
MULTIPLYING 90 * 2
DIVIDING 100 / 2
Age: 35, Height: 74, Weight: 180, IQ: 50
Here is a puzzle.
DIVIDING 50 / 2
MULTIPLYING 180 * 25
SUBTRACTING 74 - 4500
ADDING 35 + -4426
That becomes: -4391 Can you do it by hand?
</code></pre>
]]></content>
  </entry>
  
</feed>
